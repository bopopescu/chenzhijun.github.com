<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>饺子</title>
  
  <subtitle>优于别人，并不高贵，真正的高贵应该是优于过去的自己</subtitle>
  <link href="/rss.xml" rel="self"/>
  
  <link href="http://chenzhijun.me/"/>
  <updated>2018-10-10T07:16:15.562Z</updated>
  <id>http://chenzhijun.me/</id>
  
  <author>
    <name>陈志军</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>conclusion-201809</title>
    <link href="http://chenzhijun.me/2018/09/08/conclusion-201809/"/>
    <id>http://chenzhijun.me/2018/09/08/conclusion-201809/</id>
    <published>2018-09-08T06:53:15.000Z</published>
    <updated>2018-10-10T07:16:15.562Z</updated>
    
    <content type="html"><![CDATA[<p>#</p><p>1: linux命令行替换文本中的字符串。<code>sed -i &quot;s/100.69.224.18:10099/100.69.224.27:9999/g&quot; /file.xml</code></p><p>2: rancher平台的相关监控。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql:</span><br><span class="line"></span><br><span class="line">获取mysql用户是否可以远程登陆</span><br><span class="line">CREATE USER &apos;exporter&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;exporter&apos;;</span><br><span class="line">GRANT PROCESS, REPLICATION CLIENT ON *.* TO &apos;exporter&apos;@&apos;localhost&apos;;</span><br><span class="line">GRANT SELECT ON cattle.* TO &apos;exporter&apos;@&apos;%&apos; with MAX_USER_CONNECTIONS 3;</span><br><span class="line">help flush;</span><br><span class="line">show grants for &apos;exporter&apos;@&apos;localhost&apos;;</span><br><span class="line">flush PRIVILEGES;</span><br><span class="line"></span><br><span class="line">docker run -d -p 9104:9104 -e DATA_SOURCE_NAME=&quot;exporter:exporter@(127.0.0.1:3306)/&quot; prom/mysqld-exporter:latest</span><br><span class="line"></span><br><span class="line">haproxy:</span><br><span class="line"></span><br><span class="line">docker run -d -p 9101:9101 prom/haproxy-exporter:latest --haproxy.scrape-uri=&quot;http://www.haproxy.com/haproxy?stats;csv&quot;</span><br></pre></td></tr></table></figure><p>3: sort 根据低三列排序</p><p>docker stats -a –no-stream |awk ‘{print $1,$8,$3,$4}’|sort -k 2,4n</p><p>sort -k a,bn<br>a为第几列，b为几个字符，n为数字比较，1234，1222，从第一个字符开始，到第四个字符都会比较</p><p>4: 给基础镜像安装常用工具：ping,curl,wget,netstat。一般源里面就已经包含了，ping的源为：<code>apt install inetutils-ping或者apt install net-tools</code></p><p>5：某次给rancher平台扩容，直接将主机加上之后，将原来的应用直接*2启动，平台爆掉了。server不到。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#&lt;/p&gt;
&lt;p&gt;1: linux命令行替换文本中的字符串。&lt;code&gt;sed -i &amp;quot;s/100.69.224.18:10099/100.69.224.27:9999/g&amp;quot; /file.xml&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;2: rancher平台的相关
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>linux 挂载磁盘</title>
    <link href="http://chenzhijun.me/2018/07/26/linux-mount-disk/"/>
    <id>http://chenzhijun.me/2018/07/26/linux-mount-disk/</id>
    <published>2018-07-26T05:18:45.000Z</published>
    <updated>2018-10-10T07:16:15.566Z</updated>
    
    <content type="html"><![CDATA[<h1 id="linux-挂载磁盘"><a href="#linux-挂载磁盘" class="headerlink" title="linux 挂载磁盘"></a>linux 挂载磁盘</h1><p>最近需要挂载磁盘，记录一下。</p><p>一个500G的磁盘。使用<code>fdisk</code>查看，如果没有就使用<code>lsblk</code>可以查看到现在有哪个磁盘没有挂载。</p><p>之后就是挂载操作了。切换成root用户,查看磁盘使用的卷类型：ext4 , xfs<br><a id="more"></a><br><img src="/images/qiniu/2018-07-26-13-23-23.png" alt="2018-07-26-13-23-23"></p><p>1: 然后使用<code>mkfs -t xfs（或ext4） /dev/vdb</code>  </p><p>xfs,ext4 ：是指格式化成什么磁盘类型</p><p>/dev/vdb ：是指要挂载的磁盘</p><p>2: 挂载点 <code>mkdir /data</code> ，建立一个挂载点</p><p>3：挂载磁盘<code>mount /dev/vdb /data</code> 将刚刚格式化的磁盘挂载到<code>/data</code>目录</p><p>4：修改<code>/etc/fstab</code>文件，复制一行然后修改就可以了，将最后一个数字改为2。</p><p><img src="/images/qiniu/2018-07-26-13-33-04.png" alt="2018-07-26-13-33-04"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;linux-挂载磁盘&quot;&gt;&lt;a href=&quot;#linux-挂载磁盘&quot; class=&quot;headerlink&quot; title=&quot;linux 挂载磁盘&quot;&gt;&lt;/a&gt;linux 挂载磁盘&lt;/h1&gt;&lt;p&gt;最近需要挂载磁盘，记录一下。&lt;/p&gt;
&lt;p&gt;一个500G的磁盘。使用&lt;code&gt;fdisk&lt;/code&gt;查看，如果没有就使用&lt;code&gt;lsblk&lt;/code&gt;可以查看到现在有哪个磁盘没有挂载。&lt;/p&gt;
&lt;p&gt;之后就是挂载操作了。切换成root用户,查看磁盘使用的卷类型：ext4 , xfs&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://chenzhijun.me/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://chenzhijun.me/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Windows使用sshkey连接GitHub</title>
    <link href="http://chenzhijun.me/2018/07/17/windows-connect-github-with-sshkey/"/>
    <id>http://chenzhijun.me/2018/07/17/windows-connect-github-with-sshkey/</id>
    <published>2018-07-17T01:27:38.000Z</published>
    <updated>2018-10-10T07:16:15.570Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Windows使用sshkey连接GitHub"><a href="#Windows使用sshkey连接GitHub" class="headerlink" title="Windows使用sshkey连接GitHub"></a>Windows使用sshkey连接GitHub</h1><p>经常连接github上传东西，经常push的时候需要输入用户名和密码。下面是使用ssh-key免密的方式访问自己的github仓库。</p><p>首先在本地生成ssh-key:</p><p>进入到<code>~/</code>,用户根目录，查看<code>.ssh</code>文件夹是否有相关的公钥私钥<br>如果没有新生成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;xxx@yy.com&quot;</span><br></pre></td></tr></table></figure><p>之后再打开<code>~/.ssh/id_rsa.pub</code>拿到公钥内容，复制所有内容；</p><p>在github找到设置，add-sshkey，新建一个ssh-key。将内容粘贴进去。</p><p>之后再本地的git仓库下使用：</p><p><code>ssh -T git@github.com</code></p><p>进行验证。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Windows使用sshkey连接GitHub&quot;&gt;&lt;a href=&quot;#Windows使用sshkey连接GitHub&quot; class=&quot;headerlink&quot; title=&quot;Windows使用sshkey连接GitHub&quot;&gt;&lt;/a&gt;Windows使用sshkey连接
      
    
    </summary>
    
      <category term="ssh" scheme="http://chenzhijun.me/categories/ssh/"/>
    
    
      <category term="github" scheme="http://chenzhijun.me/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>使用Ansible批量操作服务器</title>
    <link href="http://chenzhijun.me/2018/07/16/how-to-use-ansible-to-do-something/"/>
    <id>http://chenzhijun.me/2018/07/16/how-to-use-ansible-to-do-something/</id>
    <published>2018-07-16T14:23:51.000Z</published>
    <updated>2018-10-10T07:16:15.566Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用Ansible批量操作服务器"><a href="#使用Ansible批量操作服务器" class="headerlink" title="使用Ansible批量操作服务器"></a>使用Ansible批量操作服务器</h1><p>Anbible 是干嘛的？对于一个非专业运维人士（我）来说，它就是我批量操作服务器的一个神器。试想一个场景：公司内部DNS还未搭建好，业务系统使用了域名做请求，这个时候需要你将域名制定到某台机器上，你这个时候就只能修改hosts文件了。嗯，如果是一两台服务器就算了，大不了手动ssh上去改一改，但是如果是10台了？10台不够，100台了？这个时候怎么办？你可能说我召集了一帮兄弟，大家一人改几个。OK，好不容易你改完了，这个时候业务跟你说，嗯，那台服务器挂了，不稳定，暂时换到另一台服务器上另一个IP地址。兄弟，听说醉经淘宝刀打折，买一把吧。哈哈</p><p>但是如果这个时候我们使用ansible，这个时候你就可以早点干完，早点回家陪老婆孩子了。接下来我们看看怎么使用ansible，请注意，我只是说怎么使用，是的，怎么使用，没有任何理论，不会讲解任何深的东西，只是用而已。<br><a id="more"></a><br>1：批量操作服务器。</p><p>ansible的一个简单目录结构：<br><img src="/images/qiniu/2018-07-16-22-34-50.png" alt="2018-07-16-22-34-50"></p><p><code>install.yml</code>文件内容：</p><p><img src="/images/qiniu/2018-07-16-22-36-22.png" alt="2018-07-16-22-36-22"></p><!--><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">- hosts: all </span><br><span class="line">  remote_user: rhlog</span><br><span class="line">  gather_facts: no</span><br><span class="line">  roles:</span><br><span class="line">    - role: oam</span><br><span class="line">      become: yes</span><br><span class="line">      become_method: su</span><br><span class="line">      become_user: root</span><br></pre></td></tr></table></figure><p><--><p></p><p><code>hosts</code> 文件内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">10.0.80.34 ansible_become=true ansible_become_method=su ansible_user=ssh_user ansible_ssh_pass=&quot;password&quot; ansible_become_pass=&quot;ax=n@#*!EM&quot; ansible_become_user=root</span><br><span class="line">10.07.80.37 ansible_become=true ansible_become_method=su ansible_user=ssh_user ansible_ssh_pass=&quot;W)PIukAa&quot; ansible_become_pass=&quot;r.*o)Hg!z&quot; ansible_become_user=root</span><br></pre></td></tr></table></figure><p>这两个是ansible的根目录里面比较重要的文件。install.yml里面remote_user是指登录到服务器的用户，通常大家不会让root用户远程登录的。roles是指在roles文件里面有哪些角色，你要用使用哪个角色。hosts文件一般保存的账号密码。按照这个模式登录就好了。之后我会提供这个安装包，大家可以自己照着改。哈哈。</p><p>oam角色里文件内容为：<br><img src="/images/qiniu/2018-07-16-22-41-50.png" alt="2018-07-16-22-41-50"><br>主要看tasks目录里面：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"># tasks file for oam</span><br><span class="line">- name: upload file</span><br><span class="line">  copy: src=/app/installation/resource/moving/test/roles/oam/files/data.sh dest=/home/data.sh mode=755</span><br><span class="line">- name: excute </span><br><span class="line">  shell:  bash /home/data.sh</span><br><span class="line">- name: find file </span><br><span class="line">  find:</span><br><span class="line">    paths: /home/</span><br><span class="line">    patterns: &quot;*.log&quot;</span><br><span class="line">    recurse: no</span><br><span class="line">  register: file_2_fetch</span><br><span class="line">- name: fetch</span><br><span class="line">  fetch:</span><br><span class="line">    src: &quot;&#123;&#123; item.path &#125;&#125;&quot;</span><br><span class="line">    dest: /home/diskdata/</span><br><span class="line">    flat: yes</span><br><span class="line">  with_items: &quot;&#123;&#123; file_2_fetch.files &#125;&#125;&quot;</span><br></pre></td></tr></table></figure><!--><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># !/bin/bash</span><br><span class="line">name=$(hostname -i)</span><br><span class="line">file=$&#123;name%% *&#125;</span><br><span class="line">df -h &gt;/home/rhlog/$file.log</span><br></pre></td></tr></table></figure><p><--><br>在ansible根目录我怎么使用了？<code>ansible-playbook -i hosts install.yml</code> 我的这个程序就是将files目录下的data.sh上传到hosts里面的所有主机中，然后执行data.sh，将<code>df -h</code>的内容输出到<code>ip.log</code>文件中，然后将文件下载到本地<code>/home/diskdata</code>中。这样就相当于批量操作了所有的机器。<p></p><p>另外一个使用方式，不使用上面那种方式，而是直接使用命令行的方式：</p><p>1： 判断所有机器是否可以访问某个地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible all -i hosts -m get_url -a &quot;url=http://192.168.11.32:8088/srv/releaseService?wsdl dest=./&quot;</span><br></pre></td></tr></table></figure><p>2: 判断所有机器是否可以ping通某个地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible all -i hosts -m shell -a &quot;ping -c 3 10.7.18.3&quot;</span><br></pre></td></tr></table></figure><p>3: 查找所有机器上某个应用是否启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible all -i hosts -m shell -a &quot;ps -ef | grep haproxy | grep -v grep&quot;</span><br></pre></td></tr></table></figure><p>4: 判断所有机器能否连通某个端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible all -i hosts -m shell -a &quot;telnet 192.167.180.3 25&quot;</span><br></pre></td></tr></table></figure><p>5: 批量修改某个文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible all -i ./hosts -s -m shell -a &quot;echo \&quot;127.0.0.1 test.local.com\&quot; &gt;&gt; /etc/hosts&quot;</span><br></pre></td></tr></table></figure><p>ps:</p><p><code>-s</code>,是指使用root账户</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;使用Ansible批量操作服务器&quot;&gt;&lt;a href=&quot;#使用Ansible批量操作服务器&quot; class=&quot;headerlink&quot; title=&quot;使用Ansible批量操作服务器&quot;&gt;&lt;/a&gt;使用Ansible批量操作服务器&lt;/h1&gt;&lt;p&gt;Anbible 是干嘛的？对于一个非专业运维人士（我）来说，它就是我批量操作服务器的一个神器。试想一个场景：公司内部DNS还未搭建好，业务系统使用了域名做请求，这个时候需要你将域名制定到某台机器上，你这个时候就只能修改hosts文件了。嗯，如果是一两台服务器就算了，大不了手动ssh上去改一改，但是如果是10台了？10台不够，100台了？这个时候怎么办？你可能说我召集了一帮兄弟，大家一人改几个。OK，好不容易你改完了，这个时候业务跟你说，嗯，那台服务器挂了，不稳定，暂时换到另一台服务器上另一个IP地址。兄弟，听说醉经淘宝刀打折，买一把吧。哈哈&lt;/p&gt;
&lt;p&gt;但是如果这个时候我们使用ansible，这个时候你就可以早点干完，早点回家陪老婆孩子了。接下来我们看看怎么使用ansible，请注意，我只是说怎么使用，是的，怎么使用，没有任何理论，不会讲解任何深的东西，只是用而已。&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://chenzhijun.me/categories/Linux/"/>
    
    
      <category term="Ansible" scheme="http://chenzhijun.me/tags/Ansible/"/>
    
  </entry>
  
  <entry>
    <title>prometheus 常用的查询语句</title>
    <link href="http://chenzhijun.me/2018/07/16/prometheus-query/"/>
    <id>http://chenzhijun.me/2018/07/16/prometheus-query/</id>
    <published>2018-07-16T09:57:00.000Z</published>
    <updated>2018-10-10T07:16:15.570Z</updated>
    
    <content type="html"><![CDATA[<h2 id="prometheus-常用的查询语句"><a href="#prometheus-常用的查询语句" class="headerlink" title="prometheus 常用的查询语句"></a>prometheus 常用的查询语句</h2><p>通常我们会使用grafana作为图表展示，然后选择prometheus作为数据源的方式来进行我们想要的图表展示。当然我们也可以在grafana的官网上找到相应的dashboard来直接导入，这样省去了自己手工配置的麻烦。不过知道一些必要的prometheus查询语句能帮我们更好的选择grafana的dashboard，然后我们可以自定义做些配置。</p><h3 id="prometheus一些术语"><a href="#prometheus一些术语" class="headerlink" title="prometheus一些术语"></a>prometheus一些术语</h3><p>prometheus的metrics分为四类（counter,gauge,histogram,summary）详情(<a href="https://prometheus.io/docs/concepts/metric_types/" target="_blank" rel="noopener">metrics-type</a>)，metrics_name的命令也应该符合一定的规范：<a href="https://prometheus.io/docs/concepts/data_model/" target="_blank" rel="noopener">metrics-name</a>，<a href="https://prometheus.io/docs/practices/naming/" target="_blank" rel="noopener">METRIC AND LABEL NAMING</a></p><p><code>metrics_name</code> ： 也就是指标名，通常我们都会用如http_request_total等进行查询;<br><code>metrics_label</code> ：指标的标签，也就是metrics_name{label-1=”a”,label-2=”b”}这种;<br><code>metrics_value</code> : 通常用指标名+标签查出来一个值，该值根据metrics的类型可能为浮点数，也可能为整数。</p><a id="more"></a><h3 id="0-基础查询"><a href="#0-基础查询" class="headerlink" title="0,基础查询"></a>0,基础查询</h3><p>也就是使用metrics_name+metrics_label的组合进行查询，这种查询的效率的基础是你要知道明确知道相应的name和label，如果有错误拼写，则可能数据无法展示，prometheus的查询工具能帮我们模糊匹配出所有的metrics_name。可以使用label进行筛选。<br>如果只记得部分metrics_name,那么可以使用内置的label：<code>{__name__=~&quot;metrics_name_you_remember:.*&quot;}</code>这样去匹配出来你想要的标签。</p><h3 id="1-正则匹配查询"><a href="#1-正则匹配查询" class="headerlink" title="1,正则匹配查询"></a>1,正则匹配查询</h3><p>prometheus里面用的最多的查询可能就是正则匹配了。经常配合grafana的变量(variable)一起使用。比如：<br><code>sum(irate(node_disk_reads_completed{device!~&quot;dm-.*&quot;}[5m]))</code>,这里面的<code>device!~&quot;dm-.*&quot;</code>，后面<br>引号内的<code>dm-.*</code>就是不匹配<code>dm-</code>前缀的所有metrics_name。如果要匹配的话使用<code>=~</code>。这样要注意，如果是或<br>的话要用<code>(regrex_A|regrex_B)</code>,用小括号加<code>|</code>。</p><h3 id="2-常用的操作符和函数"><a href="#2-常用的操作符和函数" class="headerlink" title="2,常用的操作符和函数"></a>2,常用的操作符和函数</h3><p>prometheus支持常用的操作符：<code>+,-,*,/,&gt;=,&lt;,&gt;,....</code>等</p><p>count是对查询的结果数量进行总和+; 而sum是对查询出来的value进行总和+;</p><p>它也支持比如topk,bottomk,min,max等等。</p><h3 id="更多的查询"><a href="#更多的查询" class="headerlink" title="更多的查询"></a>更多的查询</h3><p>在官网还有更多的查询，通常我们是结合grafana来做。官网的查询:<a href="https://prometheus.io/docs/prometheus/latest/querying/functions/" target="_blank" rel="noopener">proetheus-query</a>。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;prometheus-常用的查询语句&quot;&gt;&lt;a href=&quot;#prometheus-常用的查询语句&quot; class=&quot;headerlink&quot; title=&quot;prometheus 常用的查询语句&quot;&gt;&lt;/a&gt;prometheus 常用的查询语句&lt;/h2&gt;&lt;p&gt;通常我们会使用grafana作为图表展示，然后选择prometheus作为数据源的方式来进行我们想要的图表展示。当然我们也可以在grafana的官网上找到相应的dashboard来直接导入，这样省去了自己手工配置的麻烦。不过知道一些必要的prometheus查询语句能帮我们更好的选择grafana的dashboard，然后我们可以自定义做些配置。&lt;/p&gt;
&lt;h3 id=&quot;prometheus一些术语&quot;&gt;&lt;a href=&quot;#prometheus一些术语&quot; class=&quot;headerlink&quot; title=&quot;prometheus一些术语&quot;&gt;&lt;/a&gt;prometheus一些术语&lt;/h3&gt;&lt;p&gt;prometheus的metrics分为四类（counter,gauge,histogram,summary）详情(&lt;a href=&quot;https://prometheus.io/docs/concepts/metric_types/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;metrics-type&lt;/a&gt;)，metrics_name的命令也应该符合一定的规范：&lt;a href=&quot;https://prometheus.io/docs/concepts/data_model/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;metrics-name&lt;/a&gt;，&lt;a href=&quot;https://prometheus.io/docs/practices/naming/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;METRIC AND LABEL NAMING&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;metrics_name&lt;/code&gt; ： 也就是指标名，通常我们都会用如http_request_total等进行查询;&lt;br&gt;&lt;code&gt;metrics_label&lt;/code&gt; ：指标的标签，也就是metrics_name{label-1=”a”,label-2=”b”}这种;&lt;br&gt;&lt;code&gt;metrics_value&lt;/code&gt; : 通常用指标名+标签查出来一个值，该值根据metrics的类型可能为浮点数，也可能为整数。&lt;/p&gt;
    
    </summary>
    
      <category term="监控" scheme="http://chenzhijun.me/categories/%E7%9B%91%E6%8E%A7/"/>
    
    
      <category term="prometheus" scheme="http://chenzhijun.me/tags/prometheus/"/>
    
  </entry>
  
  <entry>
    <title>2018-06月至07月的一些总结</title>
    <link href="http://chenzhijun.me/2018/07/16/2018-06and07-conclusion/"/>
    <id>http://chenzhijun.me/2018/07/16/2018-06and07-conclusion/</id>
    <published>2018-07-16T09:57:00.000Z</published>
    <updated>2018-10-10T07:16:15.562Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2018-06月至07月的一些总结"><a href="#2018-06月至07月的一些总结" class="headerlink" title="2018-06月至07月的一些总结"></a>2018-06月至07月的一些总结</h1><p>最近好久都没有写博客了。其实最近做的事情都比较单调，就是迁移环境，不过再迁移环境中，我还是收获了很多我缺少的。单从非技术方面，我缺少勉才的那股韧劲（问题不会过夜），缺少华哥那种细致（仔细的做过一遍，还会仔细的检查一遍，不是那种大致检查，是那种一条一条的比对），当然我也看到有些同事的缺点也是我的缺点，有则改之。</p><p>在搬迁中，华哥是我们部的总负责人，他对所有的事情都会有把控，搞不定的事情都会找他。而且他总能找到合适的方法解决。最重要的是，我犯错他却从来没有指责过，只是说怎样弥补，然后跟我们说正确的方法，而后我觉得挺对不住他的。总会想着把事情再做好点。勉才是小组的执行人，执行人真的超级强，问题基本没过夜，总是在12点的时候或者第二天一早问他，他就说问题解决了。。简直了。</p><p>这次搬迁我们是轮值的，也就是一开始将所有任务分配好，然后各自自己实验一次，写下步骤，下一轮再给另一个人按照写的步骤实行一次，这样来回3轮。最后基本上，步骤文档就没啥问题了。任何人都可以按照文档完整的搭出系统。<br><a id="more"></a><br>这个过程会遇到一些问题，有些已经遗忘，有些所幸有所备份。</p><p>Q: Docker 新镜像里面脚本无权限<br>A: 这个问题是脚本在windows传递到linux系统里面可能会出现，如果看ls，那么X的权限都没有了。这个时候解决拌饭就是<code>chmod a+x xxx.sh</code></p><p>Q: Docker 导入导出镜像<br>A：镜像保存：<code>docker save -o image-name.tar image-name:latest</code>，镜像导入：<code>docker load &lt; image-name.tar</code></p><p>Q: Docker 运行一个容器，执行完之后就退出<br>A: <code>docker run --rm image:latest bash/sh</code></p><p>Q: 从运行中的容器拷贝文件/文件夹到宿主机<br>A: docker cp container-id:/path/to/file /path/to/file</p><p>Q: 修改Docker的docker.service<br>A：<code>sudo cat /lib/systemd/system/docker.service</code>,可以使用<code>find / -name docker.service</code>来找到相应文件。修改这个文件之后需要重启daemon。<code>systemctl daemon-reload</code>。在这个文件里面可以增加docker的http,https的代理。</p><p>Q: 遇到Docker push镜像的时候出现https的问题<br>A: 在/etc/docker/daemon.json文件中增加：[“insecure-registries”:[“registry.cmrh.com:5000”]</p><p>Q: “can’t create unix socket /var/run/docker.sock: is a directory”<br>A: rm -fr  /var/run/docker.sock/</p><p>Q: 容器内部无法访问外网：<br>A:  1：检查容器内部的dns，cat /etc/resolv.conf<br>    2：检查宿主机的dns，</p><p>Q: ubuntu18 重启无法进入桌面<br>A: 选择联网，让其然后下载显卡厂商的驱动。</p><p>Q: Linux统计一个文件夹下某类文件的数量<br>A: ls ./* | wc -l</p><p>Q: 查找当前目录使用情况：<br>A: du -h</p><p>Q: 查看磁盘使用情况：<br>A: df -h</p><p>Q: 修改文件所有者<br>A: chown -R user:group xxFile/xxDir</p><p>Q: shell 文件分割字符串<br>A:如下面的代码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> !/bin/bash</span><br><span class="line">name=$(hostname -i)</span><br><span class="line">file=$&#123;name%% *&#125; //分割空格</span><br><span class="line">df -h &gt;/home/rhlog/$file.log</span><br></pre></td></tr></table></figure><p>Q: find 使用</p><p>Q: AWK 使用，grep 使用</p><p>Q: haproxy 使用</p><p>Q: Ansible 直接使用命令</p><p>Q: Dockerfile 制作镜像</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;2018-06月至07月的一些总结&quot;&gt;&lt;a href=&quot;#2018-06月至07月的一些总结&quot; class=&quot;headerlink&quot; title=&quot;2018-06月至07月的一些总结&quot;&gt;&lt;/a&gt;2018-06月至07月的一些总结&lt;/h1&gt;&lt;p&gt;最近好久都没有写博客了。其实最近做的事情都比较单调，就是迁移环境，不过再迁移环境中，我还是收获了很多我缺少的。单从非技术方面，我缺少勉才的那股韧劲（问题不会过夜），缺少华哥那种细致（仔细的做过一遍，还会仔细的检查一遍，不是那种大致检查，是那种一条一条的比对），当然我也看到有些同事的缺点也是我的缺点，有则改之。&lt;/p&gt;
&lt;p&gt;在搬迁中，华哥是我们部的总负责人，他对所有的事情都会有把控，搞不定的事情都会找他。而且他总能找到合适的方法解决。最重要的是，我犯错他却从来没有指责过，只是说怎样弥补，然后跟我们说正确的方法，而后我觉得挺对不住他的。总会想着把事情再做好点。勉才是小组的执行人，执行人真的超级强，问题基本没过夜，总是在12点的时候或者第二天一早问他，他就说问题解决了。。简直了。&lt;/p&gt;
&lt;p&gt;这次搬迁我们是轮值的，也就是一开始将所有任务分配好，然后各自自己实验一次，写下步骤，下一轮再给另一个人按照写的步骤实行一次，这样来回3轮。最后基本上，步骤文档就没啥问题了。任何人都可以按照文档完整的搭出系统。&lt;br&gt;
    
    </summary>
    
      <category term="总结" scheme="http://chenzhijun.me/categories/%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="总结" scheme="http://chenzhijun.me/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>最近总结-2018-07-16</title>
    <link href="http://chenzhijun.me/2018/07/16/conclusion-2018-07-16/"/>
    <id>http://chenzhijun.me/2018/07/16/conclusion-2018-07-16/</id>
    <published>2018-07-16T08:15:29.000Z</published>
    <updated>2018-10-10T07:16:15.562Z</updated>
    
    <content type="html"><![CDATA[<h1 id="最近总结-2018-07-16"><a href="#最近总结-2018-07-16" class="headerlink" title="最近总结-2018-07-16"></a>最近总结-2018-07-16</h1><p>最近公司机房搬迁，大大小小演练，解决问题搞了差不多一个月。在以前的公司其实从来没有遇到过应用搬迁的事情。那个时候还是个开发写代码的。可能有搬迁也不需要我来帮忙，但是这次公司搬迁，从前到后。基本上全程参与。只有一个感受，那就是真的是严谨的要命。</p><h2 id="1：演练"><a href="#1：演练" class="headerlink" title="1：演练"></a>1：演练</h2><p>搬迁之前，我们内部就演练了3次，之后申请搬迁后的资源又演练一次，每一次都做了详尽的记录，细微到每一条命令是怎么敲，可以说，拿到文档，就算你啥也不会，你也可以完成。为啥这么细微了，因为有一部分是我的写的文档，写了之后，在下一轮测试演练，拿给别的同事做我的部分。发现他尽然无法完成。这个时候发现，原来我认为的简单，在别人那里是那么复杂。<br><a id="more"></a></p><h2 id="2：记录"><a href="#2：记录" class="headerlink" title="2：记录"></a>2：记录</h2><p>在演练的时候会有各种异常，所有人都必须将遇到的异常以及所有异常的原因，解决方法，一一列出。这种情况保证了在异常出现，如果当事人不在，应该怎么处理。</p><h2 id="3：协调"><a href="#3：协调" class="headerlink" title="3：协调"></a>3：协调</h2><p>协调指的是协调人员，协调机器。由统一的人负责协调资源，什么时候资源会出来，哪些资源先出来，资源出来后，哪些应用可以先启动。在统筹人员那里都有。甚至连后勤都来了。谁来保证住房，哪些人去订餐。相当于大事小事全都准备好了。</p><h2 id="4：时间"><a href="#4：时间" class="headerlink" title="4：时间"></a>4：时间</h2><p>在开始切换前，先做一次正式环境测试，跑通所有应用。这个时候拿的都是一期的环境和配置，二期只是再重新部署一遍。第一次跑通之后开始切换，提前在官网发出声明，通知相应的切换人员，网络组，主机组，容器组等。之后再将所有的人员统一在办公环境办公，有问题及时解决，然后按照预定好的时间1——3点主机切换，2-4点网络切换，3点应用停掉一期，DB断开所有连接，。。。切换DB，启动应用…一步一步。基本上不会出错。</p><h2 id="5：复查验证"><a href="#5：复查验证" class="headerlink" title="5：复查验证"></a>5：复查验证</h2><p>保证所有切换的应用都是可用的。必须是所有应用，然后才是所有人完成搬迁。</p><p>总体来说，每一个细节都会照顾到，而且在正式搬迁之前需要进行多次验证，多次演练，之后在正式搬迁的时候才能将风险降到最低。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;最近总结-2018-07-16&quot;&gt;&lt;a href=&quot;#最近总结-2018-07-16&quot; class=&quot;headerlink&quot; title=&quot;最近总结-2018-07-16&quot;&gt;&lt;/a&gt;最近总结-2018-07-16&lt;/h1&gt;&lt;p&gt;最近公司机房搬迁，大大小小演练，解决问题搞了差不多一个月。在以前的公司其实从来没有遇到过应用搬迁的事情。那个时候还是个开发写代码的。可能有搬迁也不需要我来帮忙，但是这次公司搬迁，从前到后。基本上全程参与。只有一个感受，那就是真的是严谨的要命。&lt;/p&gt;
&lt;h2 id=&quot;1：演练&quot;&gt;&lt;a href=&quot;#1：演练&quot; class=&quot;headerlink&quot; title=&quot;1：演练&quot;&gt;&lt;/a&gt;1：演练&lt;/h2&gt;&lt;p&gt;搬迁之前，我们内部就演练了3次，之后申请搬迁后的资源又演练一次，每一次都做了详尽的记录，细微到每一条命令是怎么敲，可以说，拿到文档，就算你啥也不会，你也可以完成。为啥这么细微了，因为有一部分是我的写的文档，写了之后，在下一轮测试演练，拿给别的同事做我的部分。发现他尽然无法完成。这个时候发现，原来我认为的简单，在别人那里是那么复杂。&lt;br&gt;
    
    </summary>
    
      <category term="总结" scheme="http://chenzhijun.me/categories/%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="总结" scheme="http://chenzhijun.me/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>alertmanager发送的邮件中external-url修改机器名为IP地址</title>
    <link href="http://chenzhijun.me/2018/06/09/prometheus-alertmanager-external-url/"/>
    <id>http://chenzhijun.me/2018/06/09/prometheus-alertmanager-external-url/</id>
    <published>2018-06-09T08:33:37.000Z</published>
    <updated>2018-10-10T07:16:15.566Z</updated>
    
    <content type="html"><![CDATA[<h1 id="alertmanager发送的邮件中external-url修改机器名为IP地址"><a href="#alertmanager发送的邮件中external-url修改机器名为IP地址" class="headerlink" title="alertmanager发送的邮件中external-url修改机器名为IP地址"></a>alertmanager发送的邮件中external-url修改机器名为IP地址</h1><p>在使用alertmanager发送报警邮件的时候，我们通常会采用模板。比如我的一个模板：<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; define &quot;email.czj.html&quot; &#125;&#125;</span><br><span class="line">详情：&lt;br/&gt;&lt;br/&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;&#123; range .Alerts.Firing &#125;&#125;</span><br><span class="line">                &lt;tr&gt;</span><br><span class="line">                  &lt;td class=&quot;content-block&quot;&gt;</span><br><span class="line">                    &#123;&#123; if gt (len .Annotations) 0 &#125;&#125;&lt;strong&gt;描叙信息：&lt;/strong&gt;&lt;br /&gt;&#123;&#123; end &#125;&#125;</span><br><span class="line">                    &#123;&#123; range .Annotations.SortedPairs &#125;&#125;&#123;&#123; .Name &#125;&#125; = &#123;&#123; .Value &#125;&#125;&lt;br /&gt;&#123;&#123; end &#125;&#125;</span><br><span class="line">                    &lt;strong&gt;指标详情：&lt;/strong&gt;&lt;br /&gt;</span><br><span class="line">                    &#123;&#123; range .Labels.SortedPairs &#125;&#125;&#123;&#123; .Name &#125;&#125; = &#123;&#123; .Value &#125;&#125;&lt;br /&gt;&#123;&#123; end &#125;&#125;</span><br><span class="line">                    </span><br><span class="line">                    &lt;a href=&quot;&#123;&#123; .GeneratorURL &#125;&#125;&quot;&gt;链接到Prometheus&lt;/a&gt;&lt;br /&gt;</span><br><span class="line">                  &lt;/td&gt;</span><br><span class="line">                &lt;/tr&gt;</span><br><span class="line">                &lt;br/&gt;&lt;br/&gt;</span><br><span class="line">&#123;&#123; end &#125;&#125;</span><br><span class="line"></span><br><span class="line">&lt;br/&gt;&lt;br/&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;br/&gt;</span><br><span class="line">&lt;div class=&quot;footer&quot;&gt;</span><br><span class="line">          &lt;table width=&quot;100%&quot;&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">              &lt;td class=&quot;aligncenter content-block&quot; style=&quot;text-align: center;&quot;&gt;&lt;a href=&apos;&#123;&#123; .ExternalURL &#125;&#125;&apos;&gt;由 &#123;&#123; template &quot;__alertmanager&quot; . &#125;&#125;发送&lt;/a&gt;&lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">          &lt;/table&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&#123;&#123; end &#125;&#125;</span><br></pre></td></tr></table></figure></p><p>如果注意到会发现有：GeneratorURL和ExternalURL。这两者默认使用的是机器名称也就是<code>hostname</code>。这样我们就很难在邮件中获取到实际的promtheus和alertmanager地址。查了很多资料，最后发现在prometheus和alertmanager启动的时候我们可以设置这两个值的。prometheus的启动命令是：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./prometheus.exe --web.external-url="http://127.0.0.1:9090/prom" \</span><br><span class="line">                --web.route-prefix=prom \</span><br><span class="line">                --web.listen-address="0.0.0.0:9090"</span><br></pre></td></tr></table></figure><p>alertmanager启动命令是：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./alertmanager.exe --config.file=config163.yml \</span><br><span class="line">                    --web.external-url=http://127.0.0.1:9093/alertmanager \              </span><br><span class="line">                    --web.route-prefix=alertmanager</span><br></pre></td></tr></table></figure><p>这里的<code>web.external-url</code>也就是GeneratorURL和ExternalURL两者在email中的指，在设置<code>web.external-url</code>的同时我们需要记得设置<code>web.router-prefix</code>的值，应为<code>web.router-prefix</code>的默认值是<code>web.external-url</code>，如果不同时指定<code>web.router-prefix</code>那么就将会出现特别神奇的效果，你需要重复输入两个地址才能访问到相应的prometheus和alertmanager，这个参数是指的路径。所以一定要设置<code>web.router-prefix</code>,你也可以设置成<code>--web.route-prefix=&quot;&quot;</code>这样来将子路径就设置为根路径。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;alertmanager发送的邮件中external-url修改机器名为IP地址&quot;&gt;&lt;a href=&quot;#alertmanager发送的邮件中external-url修改机器名为IP地址&quot; class=&quot;headerlink&quot; title=&quot;alertmanager发送的邮件中external-url修改机器名为IP地址&quot;&gt;&lt;/a&gt;alertmanager发送的邮件中external-url修改机器名为IP地址&lt;/h1&gt;&lt;p&gt;在使用alertmanager发送报警邮件的时候，我们通常会采用模板。比如我的一个模板：&lt;br&gt;
    
    </summary>
    
      <category term="监控" scheme="http://chenzhijun.me/categories/%E7%9B%91%E6%8E%A7/"/>
    
    
      <category term="prometheus" scheme="http://chenzhijun.me/tags/prometheus/"/>
    
      <category term="alertmanager" scheme="http://chenzhijun.me/tags/alertmanager/"/>
    
  </entry>
  
  <entry>
    <title>prometheus 使用influxdb 做永久存储</title>
    <link href="http://chenzhijun.me/2018/06/09/prometheus-storage-influxdb/"/>
    <id>http://chenzhijun.me/2018/06/09/prometheus-storage-influxdb/</id>
    <published>2018-06-09T08:04:43.000Z</published>
    <updated>2018-10-10T07:16:15.570Z</updated>
    
    <content type="html"><![CDATA[<h1 id="prometheus-使用远端存储"><a href="#prometheus-使用远端存储" class="headerlink" title="prometheus 使用远端存储"></a>prometheus 使用远端存储</h1><p>使用Prometheus的过程中，我们可以发现Prometheus默认是自己带有存储的，不过保存的时间为15天。但是对于公司而言，可能有时候会对数据进行统计分析，那么15天的数据将不会满足要求了。所以我们希望能够将数据永久存储起来，或者说能够让我们自己将数据进行处理。</p><p>这里我们要讲的就是Prometheus的 remote_storage 功能。Prometheus的remote_storage 其实是一个adapter，至于在adapter的另一端是什么类型的时序数据库它根本不关心，如果你愿意，你也可以编写自己的adpater。我这里采用官网提供的influxdb作为远端存储的实例。</p><p>存储的方式为：Prometheus —-发送数据—- &gt; remote_storage_adapter —- 存储数据 —-&gt; influxdb。<br><a id="more"></a></p><h2 id="下载安装influxdb"><a href="#下载安装influxdb" class="headerlink" title="下载安装influxdb"></a>下载安装influxdb</h2><p>我采用的docker安装influxdb，非常容易。下载influxdb的镜像，然后让它暴露出相应的端口：</p><p><code>docker run -p 8086:8086 -v $PWD:/var/lib/influxdb --name influxdb influxdb</code> 这样，一个influxdb就准备好了。influxdb的一些介绍或者操作可以查看官网。<br>我们安装好influxdb之后需要在influxdb中创建一个prometheus的库：<br><code>curl -XPOST http://localhost:8086/query --data-urlencode &quot;q=CREATE DATABASE prometheus&quot;</code>。</p><h2 id="准备remote-storage-adapter"><a href="#准备remote-storage-adapter" class="headerlink" title="准备remote_storage_adapter"></a>准备remote_storage_adapter</h2><p>在github上准备一个<a href="https://github.com/prometheus/prometheus/blob/master/documentation/examples/remote_storage/remote_storage_adapter/README.md" target="_blank" rel="noopener">remote_storage_adapter</a>的可执行文件，然后启动它，如果想获取相应的帮助可以使用:<code>./remote_storage_adapter -h</code>来获取相应帮助(修改绑定的端口，influxdb的设置等..)，现在我们启动一个remote_storage_adapter来对接influxdb和prometheus：<br><code>./remote_storage_adapter -influxdb-url=http://localhost:8086/ -influxdb.database=prometheus -influxdb.retention-policy=autogen</code>，influxdb默认绑定的端口为<code>9201</code></p><h2 id="修改-prometheus-yml-配置对接adapter"><a href="#修改-prometheus-yml-配置对接adapter" class="headerlink" title="修改 prometheus.yml 配置对接adapter"></a>修改 prometheus.yml 配置对接adapter</h2><p>前面的准备操作完了之后，就可以对prometheus进行配置了。修改<code>prometheus.yml</code>文件，在文件末尾增加：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">remote_write:</span></span><br><span class="line"><span class="attr">  - url:</span> <span class="string">"http://localhost:9201/write"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">remote_read:</span></span><br><span class="line"><span class="attr">  - url:</span> <span class="string">"http://localhost:9201/read"</span></span><br></pre></td></tr></table></figure><p>之后我们启动prometheus就可以看到influxdb中会有相应的数据了。如果验证我们采集的metrics数据被存储起来了呢？我们选取一个metric，过几分钟然后将prometheus停止，并且将data目录删除，重启prometheus，然后我们再查询这个metric，可以看到之前几分钟的数据还在那里。</p><h3 id="prometheus-高可用"><a href="#prometheus-高可用" class="headerlink" title="prometheus 高可用"></a>prometheus 高可用</h3><p>最近在实践一个事情，就是Prometheus的高可用，我的想法是将所有数据都存储到influxdb，但是influxdb集群版本竟然是闭源的。我擦。。。不过这个事情倒不是最重要，实在不行我们自己弄集群版本。我的高可用选择是有多个prometheus进行的是采集，在yaml种只配置remote_write，然后让某几台Prometheus机器做查询，只配置remote_read，并且查询的prometheus不做scape-config，也就是没有采集任务，完全的查询客户端，当然还有规则报警。在实际中要注意<code>global.external_labels.monitor</code>这个配置必须是 <strong>相同的值</strong>。不然的话查询客户端不能查询到相应的metric。当然你也可以不设置这个值。<br>另外实践中我发现federate机器也就是prometheus的联邦机器，在另一个prometheus配置了一台federate之后，它会将从federate采集到的数据收集起来，并且存储到influxdb中，也就是相应的做了持久化存储。</p><p>目前还有两个问题没有解决：多个查询客户端prometheus如果都配置了报警rule的话，会不会产生单个报警重复报？另外还有就是influxdb的集群方案，该怎么操作？还要进一步研究才行啊。~~</p><h3 id="附录，influxdb的一些操作："><a href="#附录，influxdb的一些操作：" class="headerlink" title="附录，influxdb的一些操作："></a>附录，influxdb的一些操作：</h3><p>influxdb常用操作：<br>    显示数据库：show databases<br>    创建一个库：create database database_name<br>    删除一个库：drop database database_name<br>    使用库：use database<br>    表操作：show measurements<br>    插入数据<br>    <code>insert &lt;tbname&gt;,&lt;tags&gt; &lt;values&gt; [timestamp]</code><br>    说明：<br>    tbname : 数据表名称<br>    tags : 表的tag域<br>    values : 表的value域<br>    timestamp ：当前数据的时间戳（可选，没有提供的话系统会自带添加）</p><pre><code>示例如下：</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; use testdb;</span><br><span class="line">Using database testdb</span><br><span class="line">&gt; insert students,stuid=s123 score=89</span><br><span class="line">&gt; show measurements;</span><br><span class="line">name: measurements</span><br><span class="line">name</span><br><span class="line">----</span><br><span class="line">students</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;prometheus-使用远端存储&quot;&gt;&lt;a href=&quot;#prometheus-使用远端存储&quot; class=&quot;headerlink&quot; title=&quot;prometheus 使用远端存储&quot;&gt;&lt;/a&gt;prometheus 使用远端存储&lt;/h1&gt;&lt;p&gt;使用Prometheus的过程中，我们可以发现Prometheus默认是自己带有存储的，不过保存的时间为15天。但是对于公司而言，可能有时候会对数据进行统计分析，那么15天的数据将不会满足要求了。所以我们希望能够将数据永久存储起来，或者说能够让我们自己将数据进行处理。&lt;/p&gt;
&lt;p&gt;这里我们要讲的就是Prometheus的 remote_storage 功能。Prometheus的remote_storage 其实是一个adapter，至于在adapter的另一端是什么类型的时序数据库它根本不关心，如果你愿意，你也可以编写自己的adpater。我这里采用官网提供的influxdb作为远端存储的实例。&lt;/p&gt;
&lt;p&gt;存储的方式为：Prometheus —-发送数据—- &amp;gt; remote_storage_adapter —- 存储数据 —-&amp;gt; influxdb。&lt;br&gt;
    
    </summary>
    
      <category term="监控" scheme="http://chenzhijun.me/categories/%E7%9B%91%E6%8E%A7/"/>
    
    
      <category term="prometheus" scheme="http://chenzhijun.me/tags/prometheus/"/>
    
  </entry>
  
  <entry>
    <title>DNS 服务器搭建</title>
    <link href="http://chenzhijun.me/2018/06/09/self-dns-server-install/"/>
    <id>http://chenzhijun.me/2018/06/09/self-dns-server-install/</id>
    <published>2018-06-09T07:24:01.000Z</published>
    <updated>2018-10-10T07:16:15.570Z</updated>
    
    <content type="html"><![CDATA[<h1 id="搭建公司内部DNS服务器"><a href="#搭建公司内部DNS服务器" class="headerlink" title="搭建公司内部DNS服务器"></a>搭建公司内部DNS服务器</h1><p>平常有很多时候可能会通过改hosts文件的方式来访问自定义的某个域名，但仅限于单机而已。如果能用dns解析的方式来统一管理那将会很方便。</p><h2 id="搭建-DNS-服务器"><a href="#搭建-DNS-服务器" class="headerlink" title="搭建 DNS 服务器"></a>搭建 DNS 服务器</h2><p>实验基于centos7实践。切换到root用户（以下所有操作都在root下执行）：</p><ol><li>安装软件：</li></ol><p>我们使用dns软件 bind9 系列安装包。</p><p><code>yum -y install bind*</code></p><p>安装后的部分日志:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Installed:</span><br><span class="line">  bind.x86_64 32:9.9.4-61.el7               bind-chroot.x86_64 32:9.9.4-61.el7        bind-devel.x86_64 32:9.9.4-61.el7       </span><br><span class="line">  bind-dyndb-ldap.x86_64 0:11.1-4.el7       bind-libs.x86_64 32:9.9.4-61.el7          bind-lite-devel.x86_64 32:9.9.4-61.el7  </span><br><span class="line">  bind-pkcs11.x86_64 32:9.9.4-61.el7        bind-pkcs11-devel.x86_64 32:9.9.4-61.el7  bind-pkcs11-libs.x86_64 32:9.9.4-61.el7 </span><br><span class="line">  bind-pkcs11-utils.x86_64 32:9.9.4-61.el7  bind-sdb.x86_64 32:9.9.4-61.el7           bind-sdb-chroot.x86_64 32:9.9.4-61.el7  </span><br><span class="line">  bind-utils.x86_64 32:9.9.4-61.el7        </span><br><span class="line"></span><br><span class="line">Dependency Installed:</span><br><span class="line">  postgresql-libs.x86_64 0:9.2.23-3.el7_4                                                                                      </span><br><span class="line"></span><br><span class="line">Updated:</span><br><span class="line">  bind-libs-lite.x86_64 32:9.9.4-61.el7                           bind-license.noarch 32:9.9.4-61.el7</span><br></pre></td></tr></table></figure><a id="more"></a><ol start="2"><li><p>备份主配置文件：</p><p><code>cp /etc/named.conf /etc/name.conf.bak.$(date &#39;+%Y-%m-%d&#39;)</code></p></li><li><p>修改主配置文件：<code>vi /etc/named.conf</code></p><p>修改两处为<code>any</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">  options &#123;</span><br><span class="line">listen-on port 53 &#123; any; &#125;; // 修改此处为any</span><br><span class="line">listen-on-v6 port 53 &#123; ::1; &#125;;</span><br><span class="line">directory &quot;/var/named&quot;;</span><br><span class="line">dump-file &quot;/var/named/data/cache_dump.db&quot;;</span><br><span class="line">statistics-file &quot;/var/named/data/named_stats.txt&quot;;</span><br><span class="line">memstatistics-file &quot;/var/named/data/named_mem_stats.txt&quot;;</span><br><span class="line">allow-query     &#123; any; &#125;; //修改此处为any</span><br><span class="line">//forwarders &#123;</span><br><span class="line"></span><br><span class="line">//&#125;</span><br><span class="line"></span><br><span class="line">/* </span><br><span class="line"> - If you are building an AUTHORITATIVE DNS server, do NOT enable recursion.</span><br><span class="line"> - If you are building a RECURSIVE (caching) DNS server, you need to enable </span><br><span class="line">   recursion. </span><br><span class="line"> - If your recursive DNS server has a public IP address, you MUST enable access </span><br><span class="line">   control to limit queries to your legitimate users. Failing to do so will</span><br><span class="line">   cause your server to become part of large scale DNS amplification </span><br><span class="line">   attacks. Implementing BCP38 within your network would greatly</span><br><span class="line">   reduce such attack surface </span><br><span class="line">*/</span><br><span class="line">recursion yes;</span><br><span class="line"></span><br><span class="line">dnssec-enable yes;</span><br><span class="line">dnssec-validation no; //修改这里ping通外网</span><br><span class="line"></span><br><span class="line">/* Path to ISC DLV key */</span><br><span class="line">bindkeys-file &quot;/etc/named.iscdlv.key&quot;;</span><br><span class="line"></span><br><span class="line">managed-keys-directory &quot;/var/named/dynamic&quot;;</span><br><span class="line"></span><br><span class="line">pid-file &quot;/run/named/named.pid&quot;;</span><br><span class="line">session-keyfile &quot;/run/named/session.key&quot;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">logging &#123;</span><br><span class="line">        channel default_debug &#123;</span><br><span class="line">                file &quot;data/named.run&quot;;</span><br><span class="line">                severity dynamic;</span><br><span class="line">        &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">zone &quot;.&quot; IN &#123;</span><br><span class="line">type hint;</span><br><span class="line">file &quot;named.ca&quot;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">include &quot;/etc/named.rfc1912.zones&quot;;</span><br><span class="line">include &quot;/etc/named.root.key&quot;;</span><br></pre></td></tr></table></figure></li></ol><h1 id="自定义域名配置"><a href="#自定义域名配置" class="headerlink" title="自定义域名配置"></a>自定义域名配置</h1><p>现在安装后基本的dns服务器之后，我们就开始自定义个域名来进行解析:</p><p><code>vi named.rfc1912.zones</code></p><p>增加一个需要解析的主域名比如：<code>cococzj.com</code>;(公网肯定没有这个域名)</p><p>增加下面的文件到文件<code>named.rfc1912.zones</code>的最后<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">zone &quot;cococzj.com&quot; IN &#123;</span><br><span class="line">        type master;</span><br><span class="line">        file &quot;cococzj.com.zone&quot;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><h1 id="增加域名配置"><a href="#增加域名配置" class="headerlink" title="增加域名配置"></a>增加域名配置</h1><p>上面定义了<code>cococzj.com.zone</code>的文件，现在增加配置：<code>vi /var/named/cococzj.com.zone</code></p><p>增加下面的内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$TTL 86400</span><br><span class="line">@       IN SOA          ns.cococzj.com. root (</span><br><span class="line">                                        1       ; serial</span><br><span class="line">                                        1D      ; refresh</span><br><span class="line">                                        1H      ; retry</span><br><span class="line">                                        1W      ; expire</span><br><span class="line">                                        0 )     ; minimum  </span><br><span class="line"></span><br><span class="line">@       IN      NS      ns.cococzj.com.</span><br><span class="line">ns      IN      A       10.62.12.24</span><br><span class="line">www     IN      A       10.62.14.80</span><br><span class="line">ttt     IN      A       10.62.12.3</span><br></pre></td></tr></table></figure><p>ns 对应的ip地址必须为dns服务器搭建的IP地址，也就是dns安装的机器的ip地址。</p><p><code>ns      IN      A       10.62.12.24</code>  ==&gt; <code>ns      IN      A       your_dns_server_ip</code></p><p><code>www     IN      A       10.62.14.80</code> 代表将<code>www.cococzj.com</code>解析到<code>10.62.14.80</code>服务器上。</p><h1 id="修改zone文件权限"><a href="#修改zone文件权限" class="headerlink" title="修改zone文件权限"></a>修改zone文件权限</h1><p><code>chown .named /var/named/cococzj.com.zone</code></p><h1 id="检查配置文件"><a href="#检查配置文件" class="headerlink" title="检查配置文件"></a>检查配置文件</h1><p><code>named-checkconf</code> 检查主配置文件是否配置正确，没有输出表明是正确的:</p><p><code>named-checkzone</code> 检查zone文件配置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">named-checkzone "cococzj.com" /var/named/cococzj.com.zone</span><br><span class="line"></span><br><span class="line">result:</span><br><span class="line">zone cococzj.com/IN: loaded serial 1</span><br><span class="line">OK</span><br></pre></td></tr></table></figure><h1 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h1><p>可以先ping一下服务域名再重启：<br><code>systemctl restart named.service</code></p><h1 id="测试："><a href="#测试：" class="headerlink" title="测试："></a>测试：</h1><ol><li>先ping试一下：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-dev-yw-1 etc]# ping www.cococzj.com</span><br><span class="line">ping: www.cococzj.com: Name or service not known</span><br></pre></td></tr></table></figure><ol start="2"><li>增加dns服务地址；<code>vi /etc/resolv.conf</code>，在文件中新建：</li></ol><p><code>nameserver 10.62.12.2</code></p><p>再一次ping：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-dev-yw-1 etc]# vi /etc/resolv.conf</span><br><span class="line">[root@k8s-dev-yw-1 etc]# ping www.cococzj.com</span><br><span class="line">PING www.cococzj.com (10.62.14.80) 56(84) bytes of data.</span><br><span class="line">64 bytes from 10.62.14.80 (10.62.14.80): icmp_seq=1 ttl=63 time=0.501 ms</span><br><span class="line">64 bytes from 10.62.14.80 (10.62.14.80): icmp_seq=2 ttl=63 time=0.466 ms</span><br><span class="line">64 bytes from 10.62.14.80 (10.62.14.80): icmp_seq=3 ttl=63 time=0.509 ms</span><br><span class="line">^C</span><br><span class="line">--- www.cococzj.com ping statistics ---</span><br><span class="line">3 packets transmitted, 3 received, 0% packet loss, time 2001ms</span><br><span class="line">rtt min/avg/max/mdev = 0.466/0.492/0.509/0.018 ms</span><br></pre></td></tr></table></figure><h1 id="新增一个域名"><a href="#新增一个域名" class="headerlink" title="新增一个域名"></a>新增一个域名</h1><ol><li><code>vi named.rfc1912.zones</code>在文件中新增：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">zone &quot;your_website.com&quot; IN &#123;</span><br><span class="line">        type master;</span><br><span class="line">        file &quot;your_website.com.zone&quot;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ol start="2"><li><p>复制一份之前配置好的配置<code>cp /var/named/cococzj.com.zone /var/named/your_website.com.zone</code></p></li><li><p>编辑配置文件 <code>vi /var/named/your_website.com.zone</code>将<code>cococzj</code>改为<code>your_website</code>，然后修改相应的ip和</p></li><li><p>检查配置文件：</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-dev-yw-1 etc]# named-checkzone &quot;cmrrancher.com&quot; /var/named/cmrhrancher.com.zone</span><br><span class="line">zone cmrrancher.com/IN: loaded serial 1</span><br><span class="line">OK</span><br><span class="line">[root@k8s-dev-yw-1 etc]# named-checkconf</span><br><span class="line">[root@k8s-dev-yw-1 etc]#</span><br></pre></td></tr></table></figure><ol start="5"><li><p>重载服务<br><code>systemctl reload named.service</code></p></li><li><p>测试：<code>ping www.cmrhrancher.com</code></p></li></ol><h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><span class="line">[root@qianyi-monitor-3 etc]# yum install -y bind*</span><br><span class="line">Loaded plugins: fastestmirror</span><br><span class="line">http://10.0.0.5/centos/7/cloud/x86_64/openstack-newton/repodata/repomd.xml: [Errno 14] HTTP Error 404 - Not Found</span><br><span class="line">Trying other mirror.</span><br><span class="line">To address this issue please refer to the below knowledge base article </span><br><span class="line"></span><br><span class="line">https://access.redhat.com/articles/1320623</span><br><span class="line"></span><br><span class="line">If above article doesn&apos;t help to resolve this issue please create a bug on https://bugs.centos.org/</span><br><span class="line"></span><br><span class="line">http://10.0.0.5/centos/7/docker/x86_64/repodata/repomd.xml: [Errno 14] HTTP Error 404 - Not Found</span><br><span class="line">Trying other mirror.</span><br><span class="line">dockerrepo                                                                                                                                          | 2.9 kB  00:00:00     </span><br><span class="line">http://10.0.0.5/centos/7/latest/x86_64/repodata/repomd.xml: [Errno 14] HTTP Error 404 - Not Found</span><br><span class="line">Trying other mirror.</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line">Resolving Dependencies</span><br><span class="line">--&gt; Running transaction check</span><br><span class="line">---&gt; Package bind.x86_64 32:9.9.4-61.el7 will be installed</span><br><span class="line">--&gt; Processing Dependency: libGeoIP.so.1()(64bit) for package: 32:bind-9.9.4-61.el7.x86_64</span><br><span class="line">---&gt; Package bind-chroot.x86_64 32:9.9.4-61.el7 will be installed</span><br><span class="line">---&gt; Package bind-devel.x86_64 32:9.9.4-61.el7 will be installed</span><br><span class="line">---&gt; Package bind-dyndb-ldap.x86_64 0:11.1-4.el7 will be installed</span><br><span class="line">---&gt; Package bind-libs.x86_64 32:9.9.4-61.el7 will be installed</span><br><span class="line">---&gt; Package bind-libs-lite.x86_64 32:9.9.4-29.el7 will be updated</span><br><span class="line">---&gt; Package bind-libs-lite.x86_64 32:9.9.4-61.el7 will be an update</span><br><span class="line">---&gt; Package bind-license.noarch 32:9.9.4-29.el7 will be updated</span><br><span class="line">---&gt; Package bind-license.noarch 32:9.9.4-61.el7 will be an update</span><br><span class="line">---&gt; Package bind-lite-devel.x86_64 32:9.9.4-61.el7 will be installed</span><br><span class="line">---&gt; Package bind-pkcs11.x86_64 32:9.9.4-61.el7 will be installed</span><br><span class="line">---&gt; Package bind-pkcs11-devel.x86_64 32:9.9.4-61.el7 will be installed</span><br><span class="line">---&gt; Package bind-pkcs11-libs.x86_64 32:9.9.4-61.el7 will be installed</span><br><span class="line">---&gt; Package bind-pkcs11-utils.x86_64 32:9.9.4-61.el7 will be installed</span><br><span class="line">---&gt; Package bind-sdb.x86_64 32:9.9.4-61.el7 will be installed</span><br><span class="line">--&gt; Processing Dependency: libpq.so.5()(64bit) for package: 32:bind-sdb-9.9.4-61.el7.x86_64</span><br><span class="line">---&gt; Package bind-sdb-chroot.x86_64 32:9.9.4-61.el7 will be installed</span><br><span class="line">---&gt; Package bind-utils.x86_64 32:9.9.4-61.el7 will be installed</span><br><span class="line">--&gt; Running transaction check</span><br><span class="line">---&gt; Package GeoIP.x86_64 0:1.5.0-11.el7 will be installed</span><br><span class="line">---&gt; Package postgresql-libs.x86_64 0:9.2.23-3.el7_4 will be installed</span><br><span class="line">--&gt; Finished Dependency Resolution</span><br><span class="line"></span><br><span class="line">Dependencies Resolved</span><br><span class="line"></span><br><span class="line">===========================================================================================================================================================================</span><br><span class="line"> Package                                        Arch                                Version                                        Repository                         Size</span><br><span class="line">===========================================================================================================================================================================</span><br><span class="line">Installing:</span><br><span class="line"> bind                                           x86_64                              32:9.9.4-61.el7                                base                              1.8 M</span><br><span class="line"> bind-chroot                                    x86_64                              32:9.9.4-61.el7                                base                               87 k</span><br><span class="line"> bind-devel                                     x86_64                              32:9.9.4-61.el7                                base                              399 k</span><br><span class="line"> bind-dyndb-ldap                                x86_64                              11.1-4.el7                                     base                              122 k</span><br><span class="line"> bind-libs                                      x86_64                              32:9.9.4-61.el7                                base                              1.0 M</span><br><span class="line"> bind-lite-devel                                x86_64                              32:9.9.4-61.el7                                base                              308 k</span><br><span class="line"> bind-pkcs11                                    x86_64                              32:9.9.4-61.el7                                base                              298 k</span><br><span class="line"> bind-pkcs11-devel                              x86_64                              32:9.9.4-61.el7                                base                              105 k</span><br><span class="line"> bind-pkcs11-libs                               x86_64                              32:9.9.4-61.el7                                base                              1.1 M</span><br><span class="line"> bind-pkcs11-utils                              x86_64                              32:9.9.4-61.el7                                base                              198 k</span><br><span class="line"> bind-sdb                                       x86_64                              32:9.9.4-61.el7                                base                              353 k</span><br><span class="line"> bind-sdb-chroot                                x86_64                              32:9.9.4-61.el7                                base                               87 k</span><br><span class="line"> bind-utils                                     x86_64                              32:9.9.4-61.el7                                base                              204 k</span><br><span class="line">Updating:</span><br><span class="line"> bind-libs-lite                                 x86_64                              32:9.9.4-61.el7                                base                              734 k</span><br><span class="line"> bind-license                                   noarch                              32:9.9.4-61.el7                                base                               85 k</span><br><span class="line">Installing for dependencies:</span><br><span class="line"> GeoIP                                          x86_64                              1.5.0-11.el7                                   base                              1.1 M</span><br><span class="line"> postgresql-libs                                x86_64                              9.2.23-3.el7_4                                 base                              234 k</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">===========================================================================================================================================================================</span><br><span class="line">Install  13 Packages (+2 Dependent packages)</span><br><span class="line">Upgrade   2 Packages</span><br><span class="line"></span><br><span class="line">Total download size: 8.1 M</span><br><span class="line">Downloading packages:</span><br><span class="line">Delta RPMs disabled because /usr/bin/applydeltarpm not installed.</span><br><span class="line">(1/17): bind-9.9.4-61.el7.x86_64.rpm                                                                                                                | 1.8 MB  00:00:00     </span><br><span class="line">(2/17): GeoIP-1.5.0-11.el7.x86_64.rpm                                                                                                               | 1.1 MB  00:00:00     </span><br><span class="line">(3/17): bind-chroot-9.9.4-61.el7.x86_64.rpm                                                                                                         |  87 kB  00:00:00     </span><br><span class="line">(4/17): bind-devel-9.9.4-61.el7.x86_64.rpm                                                                                                          | 399 kB  00:00:00     </span><br><span class="line">(5/17): bind-dyndb-ldap-11.1-4.el7.x86_64.rpm                                                                                                       | 122 kB  00:00:00     </span><br><span class="line">(6/17): bind-libs-lite-9.9.4-61.el7.x86_64.rpm                                                                                                      | 734 kB  00:00:00     </span><br><span class="line">(7/17): bind-libs-9.9.4-61.el7.x86_64.rpm                                                                                                           | 1.0 MB  00:00:00     </span><br><span class="line">(8/17): bind-license-9.9.4-61.el7.noarch.rpm                                                                                                        |  85 kB  00:00:00     </span><br><span class="line">(9/17): bind-lite-devel-9.9.4-61.el7.x86_64.rpm                                                                                                     | 308 kB  00:00:00     </span><br><span class="line">(10/17): bind-pkcs11-9.9.4-61.el7.x86_64.rpm                                                                                                        | 298 kB  00:00:00     </span><br><span class="line">(11/17): bind-pkcs11-devel-9.9.4-61.el7.x86_64.rpm                                                                                                  | 105 kB  00:00:00     </span><br><span class="line">(12/17): bind-pkcs11-utils-9.9.4-61.el7.x86_64.rpm                                                                                                  | 198 kB  00:00:00     </span><br><span class="line">(13/17): bind-pkcs11-libs-9.9.4-61.el7.x86_64.rpm                                                                                                   | 1.1 MB  00:00:00     </span><br><span class="line">(14/17): bind-sdb-9.9.4-61.el7.x86_64.rpm                                                                                                           | 353 kB  00:00:00     </span><br><span class="line">(15/17): bind-sdb-chroot-9.9.4-61.el7.x86_64.rpm                                                                                                    |  87 kB  00:00:00     </span><br><span class="line">(16/17): bind-utils-9.9.4-61.el7.x86_64.rpm                                                                                                         | 204 kB  00:00:00     </span><br><span class="line">(17/17): postgresql-libs-9.2.23-3.el7_4.x86_64.rpm                                                                                                  | 234 kB  00:00:00     </span><br><span class="line">---------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">Total                                                                                                                                       12 MB/s | 8.1 MB  00:00:00     </span><br><span class="line">Running transaction check</span><br><span class="line">Running transaction test</span><br><span class="line">Transaction test succeeded</span><br><span class="line">Running transaction</span><br><span class="line">  Installing : GeoIP-1.5.0-11.el7.x86_64                                                                                                                              1/19 </span><br><span class="line">  Updating   : 32:bind-license-9.9.4-61.el7.noarch                                                                                                                    2/19 </span><br><span class="line">  Installing : 32:bind-libs-9.9.4-61.el7.x86_64                                                                                                                       3/19 </span><br><span class="line">  Installing : 32:bind-9.9.4-61.el7.x86_64                                                                                                                            4/19 </span><br><span class="line">  Installing : 32:bind-pkcs11-libs-9.9.4-61.el7.x86_64                                                                                                                5/19 </span><br><span class="line">  Updating   : 32:bind-libs-lite-9.9.4-61.el7.x86_64                                                                                                                  6/19 </span><br><span class="line">  Installing : postgresql-libs-9.2.23-3.el7_4.x86_64                                                                                                                  7/19 </span><br><span class="line">  Installing : 32:bind-sdb-9.9.4-61.el7.x86_64                                                                                                                        8/19 </span><br><span class="line">  Installing : 32:bind-sdb-chroot-9.9.4-61.el7.x86_64                                                                                                                 9/19 </span><br><span class="line">  Installing : 32:bind-lite-devel-9.9.4-61.el7.x86_64                                                                                                                10/19 </span><br><span class="line">  Installing : 32:bind-pkcs11-devel-9.9.4-61.el7.x86_64                                                                                                              11/19 </span><br><span class="line">  Installing : 32:bind-pkcs11-9.9.4-61.el7.x86_64                                                                                                                    12/19 </span><br><span class="line">  Installing : 32:bind-pkcs11-utils-9.9.4-61.el7.x86_64                                                                                                              13/19 </span><br><span class="line">  Installing : 32:bind-chroot-9.9.4-61.el7.x86_64                                                                                                                    14/19 </span><br><span class="line">  Installing : bind-dyndb-ldap-11.1-4.el7.x86_64                                                                                                                     15/19 </span><br><span class="line">Enabling SELinux boolean named_write_master_zones</span><br><span class="line">setsebool:  SELinux is disabled.</span><br><span class="line">  Installing : 32:bind-devel-9.9.4-61.el7.x86_64                                                                                                                     16/19 </span><br><span class="line">  Installing : 32:bind-utils-9.9.4-61.el7.x86_64                                                                                                                     17/19 </span><br><span class="line">  Cleanup    : 32:bind-libs-lite-9.9.4-29.el7.x86_64                                                                                                                 18/19 </span><br><span class="line">  Cleanup    : 32:bind-license-9.9.4-29.el7.noarch                                                                                                                   19/19 </span><br><span class="line">  Verifying  : 32:bind-pkcs11-devel-9.9.4-61.el7.x86_64                                                                                                               1/19 </span><br><span class="line">  Verifying  : 32:bind-pkcs11-9.9.4-61.el7.x86_64                                                                                                                     2/19 </span><br><span class="line">  Verifying  : 32:bind-chroot-9.9.4-61.el7.x86_64                                                                                                                     3/19 </span><br><span class="line">  Verifying  : 32:bind-sdb-9.9.4-61.el7.x86_64                                                                                                                        4/19 </span><br><span class="line">  Verifying  : 32:bind-9.9.4-61.el7.x86_64                                                                                                                            5/19 </span><br><span class="line">  Verifying  : 32:bind-devel-9.9.4-61.el7.x86_64                                                                                                                      6/19 </span><br><span class="line">  Verifying  : GeoIP-1.5.0-11.el7.x86_64                                                                                                                              7/19 </span><br><span class="line">  Verifying  : 32:bind-pkcs11-libs-9.9.4-61.el7.x86_64                                                                                                                8/19 </span><br><span class="line">  Verifying  : 32:bind-lite-devel-9.9.4-61.el7.x86_64                                                                                                                 9/19 </span><br><span class="line">  Verifying  : 32:bind-libs-9.9.4-61.el7.x86_64                                                                                                                      10/19 </span><br><span class="line">  Verifying  : 32:bind-pkcs11-utils-9.9.4-61.el7.x86_64                                                                                                              11/19 </span><br><span class="line">  Verifying  : 32:bind-libs-lite-9.9.4-61.el7.x86_64                                                                                                                 12/19 </span><br><span class="line">  Verifying  : 32:bind-utils-9.9.4-61.el7.x86_64                                                                                                                     13/19 </span><br><span class="line">  Verifying  : bind-dyndb-ldap-11.1-4.el7.x86_64                                                                                                                     14/19 </span><br><span class="line">  Verifying  : 32:bind-license-9.9.4-61.el7.noarch                                                                                                                   15/19 </span><br><span class="line">  Verifying  : postgresql-libs-9.2.23-3.el7_4.x86_64                                                                                                                 16/19 </span><br><span class="line">  Verifying  : 32:bind-sdb-chroot-9.9.4-61.el7.x86_64                                                                                                                17/19 </span><br><span class="line">  Verifying  : 32:bind-libs-lite-9.9.4-29.el7.x86_64                                                                                                                 18/19 </span><br><span class="line">  Verifying  : 32:bind-license-9.9.4-29.el7.noarch                                                                                                                   19/19 </span><br><span class="line"></span><br><span class="line">Installed:</span><br><span class="line">  bind.x86_64 32:9.9.4-61.el7                bind-chroot.x86_64 32:9.9.4-61.el7          bind-devel.x86_64 32:9.9.4-61.el7     bind-dyndb-ldap.x86_64 0:11.1-4.el7        </span><br><span class="line">  bind-libs.x86_64 32:9.9.4-61.el7           bind-lite-devel.x86_64 32:9.9.4-61.el7      bind-pkcs11.x86_64 32:9.9.4-61.el7    bind-pkcs11-devel.x86_64 32:9.9.4-61.el7   </span><br><span class="line">  bind-pkcs11-libs.x86_64 32:9.9.4-61.el7    bind-pkcs11-utils.x86_64 32:9.9.4-61.el7    bind-sdb.x86_64 32:9.9.4-61.el7       bind-sdb-chroot.x86_64 32:9.9.4-61.el7     </span><br><span class="line">  bind-utils.x86_64 32:9.9.4-61.el7         </span><br><span class="line"></span><br><span class="line">Dependency Installed:</span><br><span class="line">  GeoIP.x86_64 0:1.5.0-11.el7                                                    postgresql-libs.x86_64 0:9.2.23-3.el7_4                                                   </span><br><span class="line"></span><br><span class="line">Updated:</span><br><span class="line">  bind-libs-lite.x86_64 32:9.9.4-61.el7                                                 bind-license.noarch 32:9.9.4-61.el7                                                </span><br><span class="line"></span><br><span class="line">Complete!</span><br></pre></td></tr></table></figure><p>两个重要的配置文件：</p><p>/etc/named.rfc1912.zones ： 定义域</p><p>/var/named ：域的详细配置</p><p>之后记得要将文件的权限复制给named这个用户和组。</p><p>上面的配置可以连接到本地的定义的域名，但是无法ping通百度等。所以一般需要再配置文件中增加<code>forwarders</code>，当本地没有找到定义的域之后会在<code>forwarders</code>中定义的继续查找。打开forwarders之后记得修改<code>dnssec-validation no;</code>这样之后再ping 外网的域名就可以了。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;搭建公司内部DNS服务器&quot;&gt;&lt;a href=&quot;#搭建公司内部DNS服务器&quot; class=&quot;headerlink&quot; title=&quot;搭建公司内部DNS服务器&quot;&gt;&lt;/a&gt;搭建公司内部DNS服务器&lt;/h1&gt;&lt;p&gt;平常有很多时候可能会通过改hosts文件的方式来访问自定义的某个域名，但仅限于单机而已。如果能用dns解析的方式来统一管理那将会很方便。&lt;/p&gt;
&lt;h2 id=&quot;搭建-DNS-服务器&quot;&gt;&lt;a href=&quot;#搭建-DNS-服务器&quot; class=&quot;headerlink&quot; title=&quot;搭建 DNS 服务器&quot;&gt;&lt;/a&gt;搭建 DNS 服务器&lt;/h2&gt;&lt;p&gt;实验基于centos7实践。切换到root用户（以下所有操作都在root下执行）：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;安装软件：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我们使用dns软件 bind9 系列安装包。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yum -y install bind*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;安装后的部分日志:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Installed:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  bind.x86_64 32:9.9.4-61.el7               bind-chroot.x86_64 32:9.9.4-61.el7        bind-devel.x86_64 32:9.9.4-61.el7       &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  bind-dyndb-ldap.x86_64 0:11.1-4.el7       bind-libs.x86_64 32:9.9.4-61.el7          bind-lite-devel.x86_64 32:9.9.4-61.el7  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  bind-pkcs11.x86_64 32:9.9.4-61.el7        bind-pkcs11-devel.x86_64 32:9.9.4-61.el7  bind-pkcs11-libs.x86_64 32:9.9.4-61.el7 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  bind-pkcs11-utils.x86_64 32:9.9.4-61.el7  bind-sdb.x86_64 32:9.9.4-61.el7           bind-sdb-chroot.x86_64 32:9.9.4-61.el7  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  bind-utils.x86_64 32:9.9.4-61.el7        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Dependency Installed:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  postgresql-libs.x86_64 0:9.2.23-3.el7_4                                                                                      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Updated:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  bind-libs-lite.x86_64 32:9.9.4-61.el7                           bind-license.noarch 32:9.9.4-61.el7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>最近遇到的小问题总结-2018522</title>
    <link href="http://chenzhijun.me/2018/05/22/problem-cmrh-2018522/"/>
    <id>http://chenzhijun.me/2018/05/22/problem-cmrh-2018522/</id>
    <published>2018-05-22T10:47:28.000Z</published>
    <updated>2018-10-10T07:16:15.566Z</updated>
    
    <content type="html"><![CDATA[<h1 id="最近遇到的小问题总结-2018522"><a href="#最近遇到的小问题总结-2018522" class="headerlink" title="最近遇到的小问题总结-2018522"></a>最近遇到的小问题总结-2018522</h1><ol><li><p>Excel将两列合并成一列：<code>=CONCATENATE()</code></p></li><li><p>linux统计文件,<a href="http://blog.sina.com.cn/s/blog_464f6dba01012vwv.html" target="_blank" rel="noopener">原文链接</a>:</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">统计某文件夹下文件的个数</span><br><span class="line">ls -l |grep "^-"|wc -l</span><br><span class="line"></span><br><span class="line">统计某文件夹下目录的个数</span><br><span class="line">ls -l |grep "^ｄ"|wc -l</span><br><span class="line"></span><br><span class="line">统计文件夹下文件的个数，包括子文件夹里的</span><br><span class="line">ls -lR|grep "^-"|wc -l</span><br><span class="line"></span><br><span class="line">如统计/home/han目录(包含子目录)下的所有js文件则：</span><br><span class="line">ls -lR /home/han|grep js|wc -l 或 ls -l "/home/han"|grep "js"|wc -l</span><br><span class="line"></span><br><span class="line">统计文件夹下目录的个数，包括子文件夹里的</span><br><span class="line">ls -lR|grep "^d"|wc -l</span><br></pre></td></tr></table></figure><ol start="3"><li>linux sort的一些用法：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">去除重复行</span><br><span class="line">sort file |uniq</span><br><span class="line"></span><br><span class="line">查找非重复行</span><br><span class="line">sort file |uniq -u</span><br><span class="line"></span><br><span class="line">查找重复行</span><br><span class="line">sort file |uniq -d</span><br><span class="line"></span><br><span class="line">统计</span><br><span class="line">sort file | uniq -c</span><br></pre></td></tr></table></figure><ol start="3"><li><p>什么是linux vip：<a href="https://www.zhihu.com/question/67682565" target="_blank" rel="noopener">https://www.zhihu.com/question/67682565</a>，<a href="https://www.novell.com/documentation/bcc/bcc11_admin_nw/data/bq7ucwl.html" target="_blank" rel="noopener">https://www.novell.com/documentation/bcc/bcc11_admin_nw/data/bq7ucwl.html</a>。</p></li><li><p>Linux scp命令，上传或下载文件</p></li></ol><p>复制本地文件到远程服务器：<code>scp local_file remote_username@remote_ip:remote_folder</code>；<br>例如：<code>scp /home/chen/file.md chen@192.168.1.1:/home/chen/test.md</code></p><p>复制远程文件到本地：<code>scp remote_username@remote_ip:remote_folder local_file</code><br>例如：<code>scp chen@192.168.1.1:/home/chen/test.md /home/chen/file.md</code></p><ol start="5"><li>修改文件所属用户和组信息</li></ol><p><code>chown username:usergroup /path/to/file</code></p><ol start="6"><li>修改文件权限: ugo,a<br>user,group,other,all</li></ol><p><code>chmod a+x /path/to/file</code></p><p><code>chmod u+w /path/to/file</code></p><ol start="7"><li>linux 查看ip：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ip addr</span><br><span class="line">ifconfig</span><br><span class="line">hostname -I</span><br></pre></td></tr></table></figure><ol start="7"><li>解压缩文件：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">解压文件：tar -zvxf xxx.tar.gz</span><br><span class="line"></span><br><span class="line">压缩文件： tar -zvcf xxx.tar.gz /path/to/file/tozip</span><br></pre></td></tr></table></figure><ol start="8"><li>vim 一些操作</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">vim 全文件内替换  ： :%s/old/new/g</span><br><span class="line">当前行替换：:s/old/new/g</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">vim 打开多个文件： split/vsplit     </span><br><span class="line">文件切换ctrl w w， 获取CTRL w (上下左右或者jkhl)，CTRL F6 6</span><br></pre></td></tr></table></figure><ol start="9"><li>docker 删除容器状态为exited的容器：</li></ol><p><code>docker rm -v $(docker ps -aq -f status=exited)</code></p><ol start="10"><li>删除所有none的tag的镜像</li></ol><p><code>docker images |grep none |awk &#39;{print $3}&#39;|xargs -i docker rmi {}</code></p><ol start="11"><li>idea重置配置文件。</li></ol><p>D:\Users\chenzj001.IntelliJIdea2018.1 删除这个文件就好了，全部重置。也可以只删除config。<br>windows找到用户–&gt;.i</p><p>也就是在<code>用户目录</code>下,删除<code>.IntelliJIdea2018</code></p><ol start="12"><li>windows 查找端口占用进程</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">netstat -aon|findstr &quot;端口号&quot;</span><br><span class="line"></span><br><span class="line">tasklist|findstr “端口号”</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;最近遇到的小问题总结-2018522&quot;&gt;&lt;a href=&quot;#最近遇到的小问题总结-2018522&quot; class=&quot;headerlink&quot; title=&quot;最近遇到的小问题总结-2018522&quot;&gt;&lt;/a&gt;最近遇到的小问题总结-2018522&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;
      
    
    </summary>
    
      <category term="problem" scheme="http://chenzhijun.me/categories/problem/"/>
    
    
      <category term="problem" scheme="http://chenzhijun.me/tags/problem/"/>
    
  </entry>
  
  <entry>
    <title>shell 脚本学习</title>
    <link href="http://chenzhijun.me/2018/05/13/shell-script/"/>
    <id>http://chenzhijun.me/2018/05/13/shell-script/</id>
    <published>2018-05-13T10:02:31.000Z</published>
    <updated>2018-10-10T07:16:15.570Z</updated>
    
    <content type="html"><![CDATA[<h1 id="shell-脚本学习"><a href="#shell-脚本学习" class="headerlink" title="shell 脚本学习"></a>shell 脚本学习</h1><p>shell 脚本在linux上可以说是非常有用的一个工具，它就是linux命令的一个集合，所以写好shell脚本的关键一部分就是对linux命令比较熟悉。</p><p>本博客是在图书馆借阅shell相关脚本学习书记做的一个简单笔记。</p><h2 id="shell-脚本的创建与执行"><a href="#shell-脚本的创建与执行" class="headerlink" title="shell 脚本的创建与执行"></a>shell 脚本的创建与执行</h2><p>一般我们在linux中创建的shell脚本都是以<code>.sh</code>为结尾的，这其实不是说一定要用sh结尾才行，只是大家约定习俗的一个习惯而已。<br>在shell文件的第一行，通常是<code>#!/bin/bash</code>，表示该脚本使用bash语法。<code>#</code>是shell脚本中的注释。通常自定义的脚本我通常习惯放在<code>/usr/local/bin</code>目录下,<a href="https://unix.stackexchange.com/questions/8656/usr-bin-vs-usr-local-bin-on-linux" target="_blank" rel="noopener">关于bin,sbin,/usr/bin,/usr/local/bin等的区别</a></p><p>现在我们创建第一个脚本<code>first.sh</code>:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line">echo "Hello,world"</span><br></pre></td></tr></table></figure><a id="more"></a><p>脚本创建好之后有两种运行方式:</p><ol><li>使用bash执行：<code>bash first.sh</code></li><li>直接执行：先让first.sh变成可执行脚本<code>chmod +x first.sh</code>,然后再直接运行<code>./first.sh</code></li></ol><p>脚本运行过程中可以使用<code>bash -x first.sh</code>，这样可以看到脚本的执行过程。</p><h2 id="shell-脚本的变量"><a href="#shell-脚本的变量" class="headerlink" title="shell 脚本的变量"></a>shell 脚本的变量</h2><h3 id="脚本预定义变量"><a href="#脚本预定义变量" class="headerlink" title="脚本预定义变量"></a>脚本预定义变量</h3><p>shell 预先设置的几个变量值，比如<code>optin.sh</code>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line">echo $0 $1 $2</span><br></pre></td></tr></table></figure><p>如果执行：<code>./option.sh 1 2</code>,输出为：<code>option.sh 1 2</code></p><p>也就是执行脚本的时候后面的参数有几个，在脚本中直接使用<code>$位置</code>就可以使用这些变量值，0位置是脚本的名称。</p><h3 id="自定义变量"><a href="#自定义变量" class="headerlink" title="自定义变量"></a>自定义变量</h3><p>在脚本中自己定义的变量，<code>变量名=变量值</code>，在脚本中使用的方式为<code>$变量名</code>。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line">num=1</span><br><span class="line">echo "$num"</span><br></pre></td></tr></table></figure><p><code>num=1</code> 中<code>num</code>和<code>=</code>之间不要有空格,不要有空格，不要有空格。</p><h3 id="控制台变量值传递"><a href="#控制台变量值传递" class="headerlink" title="控制台变量值传递"></a>控制台变量值传递</h3><p>控制台交互性，读取控制台输入的数，然后传递给脚本中，如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line"></span><br><span class="line">read -p "Please input a number: " x</span><br><span class="line">read -p "Please input another number: " y</span><br><span class="line"></span><br><span class="line">sum=$[$x+$y]</span><br><span class="line"></span><br><span class="line">echo "the sum of the two numbers is : $sum"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>#chen@ubuntu:~/shell-learn$ bash read.sh </span><br><span class="line"><span class="meta">#</span>Please input a number: 1</span><br><span class="line"><span class="meta">#</span>Please input another number: 3</span><br><span class="line"><span class="meta">#</span>the sum of the two numbers is : 4</span><br></pre></td></tr></table></figure><h2 id="数值运算"><a href="#数值运算" class="headerlink" title="数值运算"></a>数值运算</h2><p>简单的加减乘除的运算，使用<code>[]</code>前面需要加上<code>$</code>，如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line"></span><br><span class="line">a=1</span><br><span class="line">b=2</span><br><span class="line">sum=$[$a+$b]</span><br><span class="line"></span><br><span class="line">echo "$a+$b=$sum"</span><br><span class="line"></span><br><span class="line">echo ================</span><br><span class="line"></span><br><span class="line">sum2=$[$a+$b]</span><br><span class="line">echo "$a+$b=$sum2"</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span># sh sum.sh 1+2=$[1+2]</span><br><span class="line"><span class="meta">#</span># bash sum.sh 1+2=3</span><br><span class="line"><span class="meta">#</span># ./sum.sh  1+2=3</span><br><span class="line"><span class="meta">#</span># 这三种方式执行结果不一样</span><br></pre></td></tr></table></figure><h2 id="if-else-条件逻辑语句"><a href="#if-else-条件逻辑语句" class="headerlink" title="if-else 条件逻辑语句"></a>if-else 条件逻辑语句</h2><p>对于if-else大家在任何一门语言中都是必备的，shell中的if-else格式如下：</p><h3 id="常用的数值判断"><a href="#常用的数值判断" class="headerlink" title="常用的数值判断"></a>常用的数值判断</h3><p>if-else常用的根据数字来判断的相关实例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 单独if语句</span><br><span class="line">if 判断语句; then</span><br><span class="line">    command</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> if-else 语句</span><br><span class="line">if 判断语句; then</span><br><span class="line">    command</span><br><span class="line">else</span><br><span class="line">    command</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>if-elseif-else 语句</span><br><span class="line">if 判断语句; then </span><br><span class="line">    command</span><br><span class="line">elif 判断语句2; then</span><br><span class="line">    command</span><br><span class="line">else</span><br><span class="line">    command</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line"></span><br><span class="line">num=$1</span><br><span class="line"></span><br><span class="line">if ((num&lt;60));then</span><br><span class="line">echo "you don't pass the exam; your score is $num"</span><br><span class="line">elif ((num&gt;=60&amp;&amp;num&lt;80));then</span><br><span class="line">echo "good job, your score is $num"</span><br><span class="line">else</span><br><span class="line">echo "great job, your score is $num"</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">if ((num==60));then </span><br><span class="line">echo "ok"</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">if ((num!=50));then</span><br><span class="line">echo "not equal 50"</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>执行的时候：<code>./if.sh 89</code>。</p><p>数值大小的判断除了有<code>(())</code>之外，还可以使用<code>[]</code>，如果使用<code>[]</code>，那么就不能使用<code>&gt; , &lt; , =</code>这些符号，要使用:<br>小于：<code>-lt</code>，大于：<code>-gt</code>，小于或等于：<code>-le</code>，大于或等于：<code>-ge</code>，等于：<code>-eq</code>，不等于：<code>-ne</code>，如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line">a=10</span><br><span class="line">if [ $a -lt 5 ];then echo ok;fi</span><br><span class="line">if [ $a -gt 5 ];then echo gt;fi</span><br><span class="line">if [ $a -ge 5 ];then echo ge;fi</span><br><span class="line">if [ $a -eq 5 ];then echo eq;fi</span><br><span class="line">if [ $a -ne 5 ];then echo ne;fi</span><br></pre></td></tr></table></figure><h3 id="if中常用的跟文档相关的判断"><a href="#if中常用的跟文档相关的判断" class="headerlink" title="if中常用的跟文档相关的判断"></a>if中常用的跟文档相关的判断</h3><p>if 语句中可以使用一些内置的跟文件判断相关的参数。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> if判断跟文件相关的一些参数</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> -e 判断文件或目录是否存在</span><br><span class="line"><span class="meta">#</span> -d 判断是不是目录，以及是否存在</span><br><span class="line"><span class="meta">#</span> -f 判断是不是普通文件，以及是否存在</span><br><span class="line"><span class="meta">#</span> -r 判断是否有读权限</span><br><span class="line"><span class="meta">#</span> -w 判断是否有写权限</span><br><span class="line"><span class="meta">#</span> -x 判断是否可执行</span><br><span class="line"></span><br><span class="line">if [ -e /home/ ]; then echo ok ;fi</span><br><span class="line"></span><br><span class="line">if [ -f /home/ ]; then echo ok ;fi</span><br><span class="line"></span><br><span class="line">if [ -f /home/chen/shell-learn/if1.sh ]; then echo ok ;fi</span><br></pre></td></tr></table></figure><h2 id="case-逻辑判断"><a href="#case-逻辑判断" class="headerlink" title="case 逻辑判断"></a>case 逻辑判断</h2><p>java中有if之外还有switch，shell中除了if之外还有case,如果总结一下啊，可以发现if中的结束用fi，case中结束用esac，刚好是倒过来的。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> case语句，value可以任意个，*指代其它值。类似java switch default</span><br><span class="line"> case 变量 in</span><br><span class="line"> value1)</span><br><span class="line"> command</span><br><span class="line"> ;;</span><br><span class="line"> value2)</span><br><span class="line"> command</span><br><span class="line"> ;;</span><br><span class="line"> value3)</span><br><span class="line"> command</span><br><span class="line"> ;;</span><br><span class="line"> *)</span><br><span class="line"> command</span><br><span class="line"> ;;</span><br><span class="line"> esac</span><br></pre></td></tr></table></figure><p>实例脚本，判断奇偶数字：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line">num=$1</span><br><span class="line">n=$[$num%2]</span><br><span class="line"></span><br><span class="line">case $n in</span><br><span class="line">1)</span><br><span class="line">echo "奇数"</span><br><span class="line">;;</span><br><span class="line">0)</span><br><span class="line">echo "偶数"</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">echo "其它的值"</span><br><span class="line">;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><p>之前跟同事学的一个很有用的基础脚本：<a href="http://chenzhijun.me/2018/05/10/a-easy-script/">地址</a></p><h2 id="shell中的循环：for，while"><a href="#shell中的循环：for，while" class="headerlink" title="shell中的循环：for，while"></a>shell中的循环：for，while</h2><p>常用到的循环就是for和while了，</p><p>for的使用方式：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 脚本循环</span><br><span class="line"><span class="meta">#</span>for 变量名 in 循环的条件; do</span><br><span class="line"><span class="meta">#</span>command</span><br><span class="line"><span class="meta">#</span>done</span><br><span class="line"></span><br><span class="line">for i in 1 2 3 4 5 6; do</span><br><span class="line">echo $i</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">for filename in `ls`; do</span><br><span class="line">echo $filename</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>while 的使用方式：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> while 条件; do</span><br><span class="line"><span class="meta">#</span> command</span><br><span class="line"><span class="meta">#</span> done</span><br><span class="line"></span><br><span class="line">num=5 </span><br><span class="line"></span><br><span class="line">while [ $num -ge 1 ]; do</span><br><span class="line">echo $num</span><br><span class="line">num=$[ $num-1 ]</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>while 中如果是<code>while :; do</code>那么就是死循环了，有些地方可以这样使用。</p><h2 id="shell-函数"><a href="#shell-函数" class="headerlink" title="shell 函数"></a>shell 函数</h2><p>shell的函数一定要在被调用之前声明，生命函数的关键字是<code>function</code>,函数的参数个数需要在调用的时候指定，如<code>func.sh</code>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line"></span><br><span class="line">function sum()</span><br><span class="line">&#123;</span><br><span class="line">sum=$[$1+$2]</span><br><span class="line">echo $sum</span><br><span class="line">echo "第三个变量：" $3</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sum $1 $2</span><br><span class="line"></span><br><span class="line">echo "======================="</span><br><span class="line"></span><br><span class="line">sum $1 $2 $3</span><br></pre></td></tr></table></figure><p>调用的方式<code>./func.sh 1 2 3</code> 输出结果为：<br><img src="/images/qiniu/2018-05-13-18-56-53.png" alt="2018-05-13-18-56-53"></p><p>可以看到第一个函数里面的<code>$1 $2 $3</code>跟shell脚本预设的变量是不相关的，函数里面能用的参数都是<code>sum</code>传递进去的。</p><blockquote><p>ps: 如果每次写完脚本都需要使用<code>chmod +x xxx.sh</code>这样也挺烦的，不如写个脚本吧，<code>x.sh</code>。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x *.sh</span><br></pre></td></tr></table></figure><p>这样就可以使用<code>./x.sh</code>，直接执行脚本就好了。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;shell-脚本学习&quot;&gt;&lt;a href=&quot;#shell-脚本学习&quot; class=&quot;headerlink&quot; title=&quot;shell 脚本学习&quot;&gt;&lt;/a&gt;shell 脚本学习&lt;/h1&gt;&lt;p&gt;shell 脚本在linux上可以说是非常有用的一个工具，它就是linux命令的一个集合，所以写好shell脚本的关键一部分就是对linux命令比较熟悉。&lt;/p&gt;
&lt;p&gt;本博客是在图书馆借阅shell相关脚本学习书记做的一个简单笔记。&lt;/p&gt;
&lt;h2 id=&quot;shell-脚本的创建与执行&quot;&gt;&lt;a href=&quot;#shell-脚本的创建与执行&quot; class=&quot;headerlink&quot; title=&quot;shell 脚本的创建与执行&quot;&gt;&lt;/a&gt;shell 脚本的创建与执行&lt;/h2&gt;&lt;p&gt;一般我们在linux中创建的shell脚本都是以&lt;code&gt;.sh&lt;/code&gt;为结尾的，这其实不是说一定要用sh结尾才行，只是大家约定习俗的一个习惯而已。&lt;br&gt;在shell文件的第一行，通常是&lt;code&gt;#!/bin/bash&lt;/code&gt;，表示该脚本使用bash语法。&lt;code&gt;#&lt;/code&gt;是shell脚本中的注释。通常自定义的脚本我通常习惯放在&lt;code&gt;/usr/local/bin&lt;/code&gt;目录下,&lt;a href=&quot;https://unix.stackexchange.com/questions/8656/usr-bin-vs-usr-local-bin-on-linux&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;关于bin,sbin,/usr/bin,/usr/local/bin等的区别&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;现在我们创建第一个脚本&lt;code&gt;first.sh&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt;!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &quot;Hello,world&quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://chenzhijun.me/categories/Linux/"/>
    
    
      <category term="shell" scheme="http://chenzhijun.me/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>基础脚本</title>
    <link href="http://chenzhijun.me/2018/05/10/a-easy-script/"/>
    <id>http://chenzhijun.me/2018/05/10/a-easy-script/</id>
    <published>2018-05-10T13:16:52.000Z</published>
    <updated>2018-10-10T07:16:15.562Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基础脚本"><a href="#基础脚本" class="headerlink" title="基础脚本"></a>基础脚本</h1><p>最近在同事那里学到一个小脚本，感觉要是之前我也会这样写，那我省去多少时间啊，技多不压身啊。</p><a id="more"></a><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line">echo "ok"</span><br><span class="line"></span><br><span class="line">buildProcess()&#123;</span><br><span class="line">echo "build image";</span><br><span class="line">docker build -t promethues-agent:v0.1.test .</span><br><span class="line">echo "start contianer..";</span><br><span class="line">docker run -dit -P --name pro-agent-test promethues-agent:v0.1.test --spring.profiles.active=test</span><br><span class="line">echo "finished";</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">privilege()&#123;</span><br><span class="line">if [ "$(whoami)" != "root" ]</span><br><span class="line">then</span><br><span class="line">        echo "should be root to execute this script";</span><br><span class="line">exit 1</span><br><span class="line">fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">stopProecess()&#123;</span><br><span class="line"></span><br><span class="line">    echo "delete container..";</span><br><span class="line">    docker rm -f pro-agent-test</span><br><span class="line">    echo "delete image...";</span><br><span class="line">    docker rmi promethues-agent:v0.1.test</span><br><span class="line">    echo "finished";</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">showUsage()&#123;</span><br><span class="line">cat &lt;&lt;END</span><br><span class="line">Usage: $0 &lt;build|stop&gt;</span><br><span class="line"></span><br><span class="line">END</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main()&#123;</span><br><span class="line">command=$1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> check privilege</span><br><span class="line"><span class="meta">#</span>privilege</span><br><span class="line"></span><br><span class="line">case $command in</span><br><span class="line">    "build") buildProcess;;</span><br><span class="line">    "stop") stopProecess;;</span><br><span class="line">    *) showUsage;;</span><br><span class="line">esac</span><br><span class="line">&#125;</span><br><span class="line">main $@</span><br></pre></td></tr></table></figure><p>上面是一个docker镜像的制作脚本，命名为<code>dockerimg.sh</code>。使用方式：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">./dockerimg.sh build</span><br><span class="line"></span><br><span class="line">./dockerimg.sh stop</span><br><span class="line"></span><br><span class="line">./dockerimg.sh *</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;基础脚本&quot;&gt;&lt;a href=&quot;#基础脚本&quot; class=&quot;headerlink&quot; title=&quot;基础脚本&quot;&gt;&lt;/a&gt;基础脚本&lt;/h1&gt;&lt;p&gt;最近在同事那里学到一个小脚本，感觉要是之前我也会这样写，那我省去多少时间啊，技多不压身啊。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://chenzhijun.me/categories/Linux/"/>
    
    
      <category term="shell" scheme="http://chenzhijun.me/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>promethues 联邦集群</title>
    <link href="http://chenzhijun.me/2018/05/10/promethues-federate/"/>
    <id>http://chenzhijun.me/2018/05/10/promethues-federate/</id>
    <published>2018-05-10T04:47:24.000Z</published>
    <updated>2018-10-10T07:16:15.570Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Prometheus-联邦集群"><a href="#Prometheus-联邦集群" class="headerlink" title="Prometheus 联邦集群"></a>Prometheus 联邦集群</h1><p>Prometheus的联邦集群我们使用它来作为Prometheus代理。因为我们是在监控rancher平台里面的docker容器里面的应用，那么拿到的就是容器的ip，而我们实际的Prometheus是部署在外部虚拟机上面的。这个时候外部的Prometheus就无法拿到rancher平台内部容器应用的metrics，所以部署一台prometheus到rancher组成联邦机，详细的官网有解释:<a href="https://prometheus.io/docs/prometheus/latest/federation/" target="_blank" rel="noopener">federate</a>，总体架构图如下<br><a id="more"></a><br><img src="/images/qiniu/2018-05-10-12-59-05.png" alt="2018-05-10-12-59-05"></p><p>外部连接方式：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">scrape_configs:</span></span><br><span class="line">  <span class="comment"># The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config.</span></span><br><span class="line">  <span class="comment"># - job_name: 'prometheus'</span></span><br><span class="line">  <span class="comment">#   # metrics_path defaults to '/metrics'</span></span><br><span class="line">  <span class="comment">#   # scheme defaults to 'http'.</span></span><br><span class="line">  <span class="comment">#   static_configs:</span></span><br><span class="line">  <span class="comment">#     - targets: ['localhost:9091']</span></span><br><span class="line"><span class="attr">  - job_name:</span> <span class="string">'federate'</span></span><br><span class="line"><span class="attr">    scrape_interval:</span> <span class="number">15</span><span class="string">s</span></span><br><span class="line">    <span class="comment"># honor_labels: true</span></span><br><span class="line"><span class="attr">    metrics_path:</span> <span class="string">'/federate'</span></span><br><span class="line"><span class="attr">    params:</span></span><br><span class="line">       <span class="string">'match[]'</span><span class="string">:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">'&#123;job=~"prometheus"&#125;'</span></span><br><span class="line">        <span class="comment">#- '&#123;job="*"&#125;'</span></span><br><span class="line">    <span class="comment">#     - '&#123;job="prometheus"&#125;'</span></span><br><span class="line">    <span class="comment">#     - '&#123;__name__=~"job:.*"&#125;'</span></span><br><span class="line">        <span class="comment">#  - '&#123;job="rancher_network_monitor"&#125;'</span></span><br><span class="line"><span class="bullet">          -</span> <span class="string">'&#123;job="targets-server"&#125;'</span></span><br><span class="line"><span class="attr">    static_configs:</span></span><br><span class="line"><span class="attr">     - targets:</span></span><br><span class="line"><span class="bullet">       -</span> <span class="string">'localhost:9090'</span></span><br><span class="line"><span class="bullet">       -</span> <span class="string">'10.62.14.129:9090'</span></span><br><span class="line">      <span class="comment">#  - '10.62.12.3:9090'</span></span><br><span class="line">      <span class="comment">#  - '10.0.11.23:80'</span></span><br></pre></td></tr></table></figure><p>额外注意就是这里的job_name下有一个match，这个好像必须要填写，嗯就是这样，只要在内部的Prometheus代理将job那么定义好，在外部再像上面的配置文件一个配置，就能在外部访问内部的prometheus的数据，而且可以保存这些数据在外部的Prometheus。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Prometheus-联邦集群&quot;&gt;&lt;a href=&quot;#Prometheus-联邦集群&quot; class=&quot;headerlink&quot; title=&quot;Prometheus 联邦集群&quot;&gt;&lt;/a&gt;Prometheus 联邦集群&lt;/h1&gt;&lt;p&gt;Prometheus的联邦集群我们使用它来作为Prometheus代理。因为我们是在监控rancher平台里面的docker容器里面的应用，那么拿到的就是容器的ip，而我们实际的Prometheus是部署在外部虚拟机上面的。这个时候外部的Prometheus就无法拿到rancher平台内部容器应用的metrics，所以部署一台prometheus到rancher组成联邦机，详细的官网有解释:&lt;a href=&quot;https://prometheus.io/docs/prometheus/latest/federation/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;federate&lt;/a&gt;，总体架构图如下&lt;br&gt;
    
    </summary>
    
      <category term="监控" scheme="http://chenzhijun.me/categories/%E7%9B%91%E6%8E%A7/"/>
    
    
      <category term="prometheus" scheme="http://chenzhijun.me/tags/prometheus/"/>
    
  </entry>
  
  <entry>
    <title>Prometheus 监控 Java 应用</title>
    <link href="http://chenzhijun.me/2018/05/09/prometheus-monitor-tomcat/"/>
    <id>http://chenzhijun.me/2018/05/09/prometheus-monitor-tomcat/</id>
    <published>2018-05-09T13:16:35.000Z</published>
    <updated>2018-10-10T07:16:15.566Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Prometheus-监控-Java-应用"><a href="#Prometheus-监控-Java-应用" class="headerlink" title="Prometheus 监控 Java 应用"></a>Prometheus 监控 Java 应用</h1><p>Prometheus 监控 Java 应用有两种方式：一种是使用官方提供的jar包，然后嵌入到应用中就可以了。这种方式一般都是新项目。我认为也是最合适的一种。不过这种情况一般是理想而已。而除了这种方式，第二种是prometheus的<a href="https://github.com/prometheus/jmx_exporter" target="_blank" rel="noopener">jmx_exporter</a>。</p><p>今天我们讨论的就是第二种。使用jmx_exporter的方式来监控我们的java应用程序。我们的java应用基本上是使用tomcat作为服务器的。这种情况下有两种方式，一种是基于springboot的jar包启动方式，一种是直接下载tomcat软件之后，将应用打成war包部署的方式。<br><a id="more"></a><br>jmx_exporter的使用非常简单，但是如果不了解就会非常懵逼。jmx_exporter实际也是基于java的jmx通过暴露Mbean来做为代理，使用http的方式来给Prometheus进行指标采集。</p><h2 id="jar-包启动应用"><a href="#jar-包启动应用" class="headerlink" title="jar 包启动应用"></a>jar 包启动应用</h2><p>如果是jar包启动的方式，那么github上面就已经有示例了。可以参照：<code>java -javaagent:./jmx_prometheus_javaagent-0.3.0.jar=9151:config.yaml -jar yourJar.jar</code>，这种方式启动。这种属于在应用启动的时候就给它加上代理。</p><p>这种方式是没有加认证的，如果需要加认证，嗯，有点麻烦，实验过一次，后来发现，还是算了。可能在虚拟机上直接运行程序还好，但是打成docker镜像就真的就有点多余了。</p><p>这种方式是监控的内嵌tomcat的启动的应用，在访问<code>http://ip:9151/metrics</code>,<code>/metrics</code>可有可无，这个时候可以看到很多tomcat指标，当然如果你的config.yaml没有改动，那么可能并不会看到，因为官网的<a href="https://github.com/prometheus/jmx_exporter/blob/master/example_configs/tomcat.yml" target="_blank" rel="noopener">config.yaml</a>中rules下的pattern:Catalina<strong>*</strong>，这里是不适用与内嵌tomcat的。内嵌的tomcat需要修改为<code>Tomcat</code>。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">startDelaySeconds:</span> <span class="number">0</span></span><br><span class="line"><span class="comment">#hostPort: 192.168.226.128:8999</span></span><br><span class="line"><span class="comment">#jmxUrl: service:jmx:rmi:///jndi/rmi://127.0.0.1:8999/jmxrmi</span></span><br><span class="line"><span class="attr">ssl:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">wercaseOutputName:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">lowercaseOutputLabelNames:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="attr">- pattern:</span> <span class="string">'Tomcat&lt;type=GlobalRequestProcessor, name=\"(\w+-\w+)-(\d+)\"&gt;&lt;&gt;(\w+):'</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">tomcat_$3_total</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    port:</span> <span class="string">"$2"</span></span><br><span class="line"><span class="attr">    protocol:</span> <span class="string">"$1"</span></span><br><span class="line"><span class="attr">  help:</span> <span class="string">Tomcat</span> <span class="string">global</span> <span class="string">$3</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">COUNTER</span></span><br><span class="line"><span class="attr">- pattern:</span> <span class="string">'Tomcat&lt;j2eeType=Servlet, WebModule=//([-a-zA-Z0-9+&amp;@#/%?=~_|!:.,;]*[-a-zA-Z0-9+&amp;@#/%=~_|]), name=([-a-zA-Z0-9+/$%~_-|!.]*), J2EEApplication=none, J2EEServer=none&gt;&lt;&gt;(requestCount|maxTime|processingTime|errorCount):'</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">tomcat_servlet_$3_total</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    module:</span> <span class="string">"$1"</span></span><br><span class="line"><span class="attr">    servlet:</span> <span class="string">"$2"</span></span><br><span class="line"><span class="attr">  help:</span> <span class="string">Tomcat</span> <span class="string">servlet</span> <span class="string">$3</span> <span class="string">total</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">COUNTER</span></span><br><span class="line"><span class="attr">- pattern:</span> <span class="string">'Tomcat&lt;type=ThreadPool, name="(\w+-\w+)-(\d+)"&gt;&lt;&gt;(currentThreadCount|currentThreadsBusy|keepAliveCount|pollerThreadCount|connectionCount):'</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">tomcat_threadpool_$3</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    port:</span> <span class="string">"$2"</span></span><br><span class="line"><span class="attr">    protocol:</span> <span class="string">"$1"</span></span><br><span class="line"><span class="attr">  help:</span> <span class="string">Tomcat</span> <span class="string">threadpool</span> <span class="string">$3</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">GAUGE</span></span><br><span class="line"><span class="attr">- pattern:</span> <span class="string">'Tomcat&lt;type=Manager, host=([-a-zA-Z0-9+&amp;@#/%?=~_|!:.,;]*[-a-zA-Z0-9+&amp;@#/%=~_|]), context=([-a-zA-Z0-9+/$%~_-|!.]*)&gt;&lt;&gt;(processingTime|sessionCounter|rejectedSessions|expiredSessions):'</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">tomcat_session_$3_total</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    context:</span> <span class="string">"$2"</span></span><br><span class="line"><span class="attr">    host:</span> <span class="string">"$1"</span></span><br><span class="line"><span class="attr">  help:</span> <span class="string">Tomcat</span> <span class="string">session</span> <span class="string">$3</span> <span class="string">total</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">COUNTER</span></span><br><span class="line"><span class="attr">- pattern:</span> <span class="string">".*"</span></span><br></pre></td></tr></table></figure><p>当然，你也看到了我的pattern这里有个：<code>&quot;.*&quot;</code>为啥这样？因为这样可以让所有的jmx metrics全部暴露出来，这方式有点暴力但是很好，很有用。</p><h2 id="Tomcat-war包应用"><a href="#Tomcat-war包应用" class="headerlink" title="Tomcat war包应用"></a>Tomcat war包应用</h2><p>war包应用部署就不说了，在bin目录启动<code>./startup.sh</code>就好了。但是如果要加上jmx_exporter。那么我们需要加上要给东西，进入bin目录（<code>$TOMCAT_HOME/bin</code>），将jmx_exporter.jar包文件和config.yaml文件复制到这里。然后修改里面的一个catalina.sh的脚本，找到<code>JAVA_OPTS</code>,加上代理：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">JAVA_OPTS="$JAVA_OPTS $JSSE_OPTS"</span><br><span class="line"></span><br><span class="line">JAVA_OPTS="$JAVA_OPTS -javaagent:$PWD/jmx_prometheus_javaagent-0.3.0.jar=9151:$PWD/config.yaml"</span><br></pre></td></tr></table></figure><p>这种启动tomcat之后，你就可以通过访问9151端口来访问metrics了。这里要记得，修改上面的config.yaml中pattern的部分，改为和github上一样就可以了，也就是pattern为Catalina<em>**</em>。</p><h2 id="监控远程的-tomcat"><a href="#监控远程的-tomcat" class="headerlink" title="监控远程的 tomcat"></a>监控远程的 tomcat</h2><p>如果你不修改catalina.sh，可以采用在bin目录新建一个setenv.sh文件，<code>修改为可执行文件</code>。然后加入下面的设置：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>CATALINA_OPTS='-javaagent:/home/chen/jmx_prometheus_javaagent-0.3.0.jar=9151:/home/chen/config.yaml'</span><br><span class="line">CATALINA_OPTS='-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=8999 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false'</span><br><span class="line"><span class="meta">#</span>JAVA_OPTS='-javaagent:/home/chen/jmx_prometheus_javaagent-0.10.jar=9151:/home/chen/config.yaml'</span><br><span class="line"><span class="meta">#</span>CATALINA_OPTS='-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=8999 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.password.file=/home/chen/jmxremote.password'</span><br></pre></td></tr></table></figure></p><p>这样在启动的时候tomcat就会暴露出8999端口并且打开metrics。上面是jmx不带认证的。</p><p>然后在另一端下载jmx_exporter，这里需要去下载<code>0.10</code>版本，在github 的release中找一下就好了。如果是远程的tomcat jmx，最新版本的代理反正是用不了，我的测试中<code>0.3.0</code>是用不了的，<code>0.10</code>是可以用的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -javaagent:./jmx_prometheus_javaagent-<span class="number">0.10</span>.jar=<span class="number">9150</span>:config.yaml</span><br></pre></td></tr></table></figure><p>相应的config.yaml需要做一些修改：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">startDelaySeconds:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">hostPort:</span> <span class="number">192.168</span><span class="number">.226</span><span class="number">.128</span><span class="string">:8999</span></span><br><span class="line"><span class="attr">jmxUrl:</span> <span class="attr">service:jmx:rmi:///jndi/rmi://192.168.226.128:8999/jmxrmi</span></span><br><span class="line"><span class="attr">ssl:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">wercaseOutputName:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">lowercaseOutputLabelNames:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="attr">- pattern:</span> <span class="string">'Tomcat&lt;type=GlobalRequestProcessor, name=\"(\w+-\w+)-(\d+)\"&gt;&lt;&gt;(\w+):'</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">tomcat_$3_total</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    port:</span> <span class="string">"$2"</span></span><br><span class="line"><span class="attr">    protocol:</span> <span class="string">"$1"</span></span><br><span class="line"><span class="attr">  help:</span> <span class="string">Tomcat</span> <span class="string">global</span> <span class="string">$3</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">COUNTER</span></span><br><span class="line"><span class="attr">- pattern:</span> <span class="string">".*"</span></span><br></pre></td></tr></table></figure><p>当然如果是springboot，现在有<code>spring-boot-starter-actuator</code>的包，是可以直接暴露metrics的，当然也可以引入prometheus提供的client jar。</p><p>实际中，还是的多动手，实践出真知。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Prometheus-监控-Java-应用&quot;&gt;&lt;a href=&quot;#Prometheus-监控-Java-应用&quot; class=&quot;headerlink&quot; title=&quot;Prometheus 监控 Java 应用&quot;&gt;&lt;/a&gt;Prometheus 监控 Java 应用&lt;/h1&gt;&lt;p&gt;Prometheus 监控 Java 应用有两种方式：一种是使用官方提供的jar包，然后嵌入到应用中就可以了。这种方式一般都是新项目。我认为也是最合适的一种。不过这种情况一般是理想而已。而除了这种方式，第二种是prometheus的&lt;a href=&quot;https://github.com/prometheus/jmx_exporter&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;jmx_exporter&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;今天我们讨论的就是第二种。使用jmx_exporter的方式来监控我们的java应用程序。我们的java应用基本上是使用tomcat作为服务器的。这种情况下有两种方式，一种是基于springboot的jar包启动方式，一种是直接下载tomcat软件之后，将应用打成war包部署的方式。&lt;br&gt;
    
    </summary>
    
      <category term="监控" scheme="http://chenzhijun.me/categories/%E7%9B%91%E6%8E%A7/"/>
    
    
      <category term="prometheus" scheme="http://chenzhijun.me/tags/prometheus/"/>
    
  </entry>
  
  <entry>
    <title>nginx 设置prometheus和grafana的反向代理</title>
    <link href="http://chenzhijun.me/2018/05/02/nginx-proxy-promethues-grafana/"/>
    <id>http://chenzhijun.me/2018/05/02/nginx-proxy-promethues-grafana/</id>
    <published>2018-05-02T14:57:50.000Z</published>
    <updated>2018-10-10T07:16:15.566Z</updated>
    
    <content type="html"><![CDATA[<h1 id="nginx-设置promethues和grafana的反向代理"><a href="#nginx-设置promethues和grafana的反向代理" class="headerlink" title="nginx 设置promethues和grafana的反向代理"></a>nginx 设置promethues和grafana的反向代理</h1><p>在配置完promethues，和grafana之后，可能需要上生产环境，这个时候如果有下面两种情况，那么就可能需要用到代理；</p><ol><li>端口只开发80,或者8080等特别的几个端口，端口数量有限；</li><li>不希望暴露给外部端口号，使用子路经来区分；eg: http://{ip}/prometheus,http://{ip}/grafana</li></ol><p>nginx 配置，监听server的端口为80，然后通过子路径在内部反向代理出去：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       127.0.0.1:80;</span><br><span class="line">    #server_name  localhost;</span><br><span class="line">    #charset koi8-r;</span><br><span class="line">    #access_log  logs/host.access.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   html;</span><br><span class="line">        index  index.html index.htm;   </span><br><span class="line">    #    proxy_pass http://127.0.0.1:9090/;</span><br><span class="line">    &#125;</span><br><span class="line">    location /grafana/ &#123;</span><br><span class="line">        proxy_pass http://127.0.0.1:3000/;</span><br><span class="line">    &#125;</span><br><span class="line">    location /promethues/ &#123;</span><br><span class="line">        proxy_pass http://127.0.0.1:9090/prometheus/;</span><br><span class="line">    &#125;</span><br><span class="line">    #error_page  404              /404.html;</span><br><span class="line">    # redirect server error pages to the static page /50x.html</span><br><span class="line">    #</span><br><span class="line">    error_page   500 502 503 504  /50x.html;</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">        root   html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p>alertmanager很大的情况等同与prometheus，可以等同配置。</p><h2 id="设置promethues的代理，子路径"><a href="#设置promethues的代理，子路径" class="headerlink" title="设置promethues的代理，子路径"></a>设置promethues的代理，子路径</h2><p>接下来需要的是将prometheus和grafana在启动或者配置文件中做一些更改，prometheus的相对来说比较简单，主要实在启动的时候根据命令行的参数来进行子路径设置。</p><p>在启动的时候设置<code>web.external-url</code>使用下面的命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./prometheus --web.external-url=promethues</span><br></pre></td></tr></table></figure><p>结果如图：</p><p><img src="/images/qiniu/2018-05-03-13-04-03.png" alt="2018-05-03-13-04-03"></p><p>还可以使用<code>./promethues --help</code>获取更多的命令行参数，alertmanager同样也适用。</p><h2 id="设置grafana的代理，子路径"><a href="#设置grafana的代理，子路径" class="headerlink" title="设置grafana的代理，子路径"></a>设置grafana的代理，子路径</h2><p>grafana的代理需要在<code>default.ini</code>中配置root_url:<code>root_url = %(protocol)s://%(domain)s:/grafana</code></p><p>之后再重启就可以了。记住，再nginx中，proxy_pass 不要带上后缀。添加反向代理后，如果访问使用<code>http://localhost:3000/grafana</code>或者<code>http://localhost:3000</code>页面会显示不全。但是使用nginx代理后的路径：<code>http://localhost/grafana</code>就可以看到全页面了。</p><p><img src="/images/qiniu/2018-05-03-13-54-16.png" alt="2018-05-03-13-54-16"></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="http://docs.grafana.org/installation/behind_proxy/" target="_blank" rel="noopener">Running Grafana behind a reverse proxy</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;nginx-设置promethues和grafana的反向代理&quot;&gt;&lt;a href=&quot;#nginx-设置promethues和grafana的反向代理&quot; class=&quot;headerlink&quot; title=&quot;nginx 设置promethues和grafana的反向代理&quot;&gt;&lt;/a&gt;nginx 设置promethues和grafana的反向代理&lt;/h1&gt;&lt;p&gt;在配置完promethues，和grafana之后，可能需要上生产环境，这个时候如果有下面两种情况，那么就可能需要用到代理；&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;端口只开发80,或者8080等特别的几个端口，端口数量有限；&lt;/li&gt;
&lt;li&gt;不希望暴露给外部端口号，使用子路经来区分；eg: http://{ip}/prometheus,http://{ip}/grafana&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;nginx 配置，监听server的端口为80，然后通过子路径在内部反向代理出去：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    listen       127.0.0.1:80;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #server_name  localhost;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #charset koi8-r;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #access_log  logs/host.access.log  main;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    location / &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        root   html;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        index  index.html index.htm;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #    proxy_pass http://127.0.0.1:9090/;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    location /grafana/ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        proxy_pass http://127.0.0.1:3000/;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    location /promethues/ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        proxy_pass http://127.0.0.1:9090/prometheus/;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #error_page  404              /404.html;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # redirect server error pages to the static page /50x.html&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    error_page   500 502 503 504  /50x.html;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    location = /50x.html &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        root   html;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="monitor" scheme="http://chenzhijun.me/categories/monitor/"/>
    
    
      <category term="nginx" scheme="http://chenzhijun.me/tags/nginx/"/>
    
      <category term="prometheus" scheme="http://chenzhijun.me/tags/prometheus/"/>
    
      <category term="grafana" scheme="http://chenzhijun.me/tags/grafana/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu 怎么修改源？</title>
    <link href="http://chenzhijun.me/2018/05/02/ubuntu-change-source-list/"/>
    <id>http://chenzhijun.me/2018/05/02/ubuntu-change-source-list/</id>
    <published>2018-05-02T09:52:56.000Z</published>
    <updated>2018-10-10T07:16:15.570Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ubuntu-怎么修改源"><a href="#ubuntu-怎么修改源" class="headerlink" title="ubuntu 怎么修改源"></a>ubuntu 怎么修改源</h1><p>修改ubuntu的源为国内的源，修改之前首先备份：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /etc/apt/sources.list /etc/apt/sources.list.backup</span><br></pre></td></tr></table></figure><p>修改源列表，选择的是国内的阿里源,<code>vi /etc/apt/sources.list</code>,清空里面内容：<code>dG</code>,使用命令的时候要回到第一行：<code>gg</code>,之后将下面的内容复制到文件中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">deb-src http://archive.ubuntu.com/ubuntu xenial main restricted #Added by software-properties</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial main restricted</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial main restricted multiverse universe #Added by software-properties</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted multiverse universe #Added by software-properties</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial universe</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-updates universe</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-updates multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse #Added by software-properties</span><br><span class="line">deb http://archive.canonical.com/ubuntu xenial partner</span><br><span class="line">deb-src http://archive.canonical.com/ubuntu xenial partner</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted multiverse universe #Added by software-properties</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-security universe</span><br><span class="line">deb [arch=amd64] https://download.daocloud.io/docker/linux/ubuntu xenial stable</span><br><span class="line"># deb-src [arch=amd64] https://download.daocloud.io/docker/linux/ubuntu xenial stable</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-security multiverse</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;ubuntu-怎么修改源&quot;&gt;&lt;a href=&quot;#ubuntu-怎么修改源&quot; class=&quot;headerlink&quot; title=&quot;ubuntu 怎么修改源&quot;&gt;&lt;/a&gt;ubuntu 怎么修改源&lt;/h1&gt;&lt;p&gt;修改ubuntu的源为国内的源，修改之前首先备份：&lt;/p&gt;

      
    
    </summary>
    
      <category term="ubuntu" scheme="http://chenzhijun.me/categories/ubuntu/"/>
    
    
      <category term="ubuntu" scheme="http://chenzhijun.me/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Prometheus+Grafana 搭建监控系统</title>
    <link href="http://chenzhijun.me/2018/04/26/prometheus-grafana-monitor/"/>
    <id>http://chenzhijun.me/2018/04/26/prometheus-grafana-monitor/</id>
    <published>2018-04-26T14:16:38.000Z</published>
    <updated>2018-10-10T07:16:15.566Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Prometheus-Grafana-搭建监控系统"><a href="#Prometheus-Grafana-搭建监控系统" class="headerlink" title="Prometheus+Grafana 搭建监控系统"></a>Prometheus+Grafana 搭建监控系统</h1><p>今天将第一版监控系统上线，过程整个就是一路坎坷。不过踩坑，填坑，确实也是为自己积攒了一些小经验。</p><h2 id="prometheus的服务发现"><a href="#prometheus的服务发现" class="headerlink" title="prometheus的服务发现"></a>prometheus的服务发现</h2><p>Prometheus的监控使用的是pull的模式，也就是每隔几秒钟去各个target采集一次metric。那么如果是多个target，如果是静态配置的话，那么就得在配置文件里面一个一个添加，尽管可以使用接口去更新配置文件，但如果服务太多，那工作量也很大。而且如果遇到微服务的情况并且容器化部署，那么可能ip地址都是随机改变的，那么就将更麻烦了。所以就有服务发现的模式出来了，有很多种实现的方式，consul，dns等等，针对我们现有的平台，我们选择了file_sd_config:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">scrape_configs:</span></span><br><span class="line">  <span class="comment"># The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config.</span></span><br><span class="line"><span class="attr">  - job_name:</span> <span class="string">'prometheus'</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># metrics_path defaults to '/metrics'</span></span><br><span class="line">    <span class="comment"># scheme defaults to 'http'.</span></span><br><span class="line"><span class="attr">    static_configs:</span></span><br><span class="line"><span class="attr">      - targets:</span> <span class="string">['localhost:9090']</span></span><br><span class="line"><span class="attr">  - job_name:</span>       <span class="string">'rancher_network_monitor'</span></span><br><span class="line">    <span class="comment"># Override the global default and scrape targets from this job every 5 seconds.</span></span><br><span class="line"><span class="attr">    scrape_interval:</span> <span class="number">1</span><span class="string">m</span></span><br><span class="line"><span class="attr">    static_configs:</span></span><br><span class="line"><span class="attr">      - targets:</span> <span class="string">['192.168.7.3:8080','192.168.8.90:8080']</span></span><br><span class="line"><span class="attr">        labels:</span></span><br><span class="line"><span class="attr">          group:</span> <span class="string">'rancher_network_monitor'</span></span><br><span class="line"><span class="attr">    metrics_path:</span> <span class="string">/metrics</span></span><br><span class="line"><span class="attr">  - job_name:</span> <span class="string">'filediscovery'</span></span><br><span class="line"><span class="attr">    scrape_interval:</span> <span class="number">5</span><span class="string">s</span></span><br><span class="line"><span class="attr">    file_sd_configs:</span></span><br><span class="line"><span class="attr">      - files:</span> <span class="string">['/home/config/*.json']</span></span><br></pre></td></tr></table></figure><p>基于文件的方式，只需要在<code>/home/config</code>目录下增加json文件就可以了，这也是在网上找的一个方案，所以我也记录下来，万一也能帮助到别人了</p><a id="more"></a><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"targets"</span>: [</span><br><span class="line">            <span class="string">"10.10.10.1:65160"</span>,</span><br><span class="line">            <span class="string">"10.10.10.2:65160"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"labels"</span>: &#123;</span><br><span class="line">            <span class="attr">"job"</span>:<span class="string">"Center"</span>,</span><br><span class="line">            <span class="attr">"service"</span>:<span class="string">"qtest"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"targets"</span>: [</span><br><span class="line">            <span class="string">"10.10.10.3:65110"</span>,</span><br><span class="line">            <span class="string">"10.10.10.4:65110"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"labels"</span>: &#123;</span><br><span class="line">            <span class="attr">"job"</span>:<span class="string">"Gateway"</span>,</span><br><span class="line">            <span class="attr">"service"</span>:<span class="string">"qtest"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="监控报警规则-rule-files"><a href="#监控报警规则-rule-files" class="headerlink" title="监控报警规则 rule_files:"></a>监控报警规则 rule_files:</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">rule_files:</span></span><br><span class="line"><span class="bullet">   -</span> <span class="string">'./alert.yml'</span></span><br></pre></td></tr></table></figure><p>规则可以在这里配置多个，这里其实也是支持通配符的。也就是：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">rule_files:</span></span><br><span class="line"><span class="bullet">   -</span> <span class="string">'/path/to/rule/*.yml'</span></span><br></pre></td></tr></table></figure><p>我使用的是yml格式，如果你会的话，也可以是用<code>.rule</code>;</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">groups:</span></span><br><span class="line"><span class="attr">- name:</span> <span class="string">goroutines_monitor</span></span><br><span class="line"><span class="attr">  rules:</span></span><br><span class="line"><span class="attr">  - alert:</span> <span class="string">go_goroutines_test</span></span><br><span class="line"><span class="attr">    expr:</span> <span class="string">go_goroutines</span> <span class="string">&gt; 200</span></span><br><span class="line"><span class="string"></span><span class="attr">    for:</span> <span class="number">5</span><span class="string">s</span></span><br><span class="line"><span class="attr">    labels:</span></span><br><span class="line"><span class="attr">      name:</span> <span class="string">goroutines_test</span></span><br><span class="line"><span class="attr">      severity:</span> <span class="string">warning</span></span><br><span class="line"><span class="attr">    annotations:</span></span><br><span class="line"><span class="attr">      summary:</span> <span class="string">"<span class="template-variable">&#123;&#123; $labels.instance &#125;&#125;</span>，机器goroutines过高。"</span> </span><br><span class="line"><span class="attr">- name:</span> <span class="string">instance_monitor</span></span><br><span class="line"><span class="attr">  rules:</span></span><br><span class="line"><span class="attr">  - alert:</span> <span class="string">instance_down</span></span><br><span class="line"><span class="attr">    expr:</span> <span class="string">up</span> <span class="string">==</span> <span class="number">0</span></span><br><span class="line"><span class="attr">    for:</span> <span class="number">1</span><span class="string">m</span></span><br><span class="line"><span class="attr">    labels:</span></span><br><span class="line"><span class="attr">      name:</span> <span class="string">instance</span></span><br><span class="line"><span class="attr">      severity:</span> <span class="string">critical</span></span><br><span class="line"><span class="attr">    annotations:</span></span><br><span class="line"><span class="attr">      summary:</span> <span class="string">"<span class="template-variable">&#123;&#123; $labels.instance &#125;&#125;</span> 挂掉了,<span class="template-variable">&#123;&#123; $labels.job&#125;&#125;</span>"</span></span><br></pre></td></tr></table></figure><p>上面的yaml就是定义了两个规则，<code>go_goroutines&gt;200</code>以及<code>up==0</code>一个是go的协程数，一个是被监控目标是否可以正常采集。在则合理推荐使用labels，这样如果是使用alertmanager做预警，那么可以使用这些label。<code>for</code>的意思指接到一个触发报警rule的收将状态变成active，然后如果在for之内的评估期内如果没有报警就变成pending状态，如果有就变成firing，发送报警。</p><h2 id="alertmanager发送报警邮件"><a href="#alertmanager发送报警邮件" class="headerlink" title="alertmanager发送报警邮件"></a>alertmanager发送报警邮件</h2><p>alertmanager相当于通知中心，它只会在Prometheus发送报警后，通过某些渠道（邮件，即时通讯等）发送通知。当然它在通知这方面做了相当多的事情。</p><h3 id="alertmanager-通知分组"><a href="#alertmanager-通知分组" class="headerlink" title="alertmanager 通知分组"></a>alertmanager 通知分组</h3><p>如果是一个频繁的bug，引起Prometheus一直触发警报，如果不做限制，那么就会引起邮箱轰炸。alertmanager中的route就是做这个的。通过路由器将不同的邮件发送给不同的人。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">route:</span> </span><br><span class="line">  <span class="comment"># How long to initially wait to send a notification for a group</span></span><br><span class="line">  <span class="comment"># of alerts. Allows to wait for an inhibiting alert to arrive or collect</span></span><br><span class="line">  <span class="comment"># more initial alerts for the same group. (Usually ~0s to few minutes.)</span></span><br><span class="line">  <span class="comment"># group_wait: 30s</span></span><br><span class="line">  <span class="comment"># How long to wait before sending a notification about new alerts that</span></span><br><span class="line">  <span class="comment"># are added to a group of alerts for which an initial notification has</span></span><br><span class="line">  <span class="comment"># already been sent. (Usually ~5m or more.)</span></span><br><span class="line"><span class="attr">  group_interval:</span> <span class="number">30</span><span class="string">s</span></span><br><span class="line">  <span class="comment"># If an alert has successfully been sent, wait 'repeat_interval' to resend them.</span></span><br><span class="line"><span class="attr">  repeat_interval:</span> <span class="number">10</span><span class="string">s</span>    </span><br><span class="line">  <span class="comment">#  A default receiver</span></span><br><span class="line"><span class="attr">  receiver:</span> <span class="string">monitor-admin</span>  </span><br><span class="line"><span class="attr">  group_by:</span> <span class="string">[name,</span> <span class="string">alertname]</span></span><br><span class="line"><span class="attr">  routes:</span></span><br><span class="line">  <span class="comment"># All alerts with service=mysql or service=cassandra</span></span><br><span class="line">  <span class="comment"># are dispatched to the database pager.</span></span><br><span class="line"><span class="attr">  - receiver:</span> <span class="string">'go-admin'</span></span><br><span class="line"><span class="attr">    group_wait:</span> <span class="number">30</span><span class="string">s</span></span><br><span class="line"><span class="attr">    group_by:</span> <span class="string">[name,</span> <span class="string">alertname]</span></span><br><span class="line"><span class="attr">    match:</span></span><br><span class="line"><span class="attr">      name:</span> <span class="string">goroutines_test</span></span><br><span class="line"><span class="attr">      alertname:</span> <span class="string">go_goroutines_test</span></span><br><span class="line">  <span class="comment"># All alerts with the team=frontend label match this sub-route.</span></span><br><span class="line">  <span class="comment"># They are grouped by product and environment rather than cluster</span></span><br><span class="line">  <span class="comment"># and alertname.</span></span><br><span class="line"><span class="attr">  - receiver:</span> <span class="string">'instance-admin'</span></span><br><span class="line"><span class="attr">    group_interval:</span> <span class="number">1</span><span class="string">m</span></span><br><span class="line"><span class="attr">    group_by:</span> <span class="string">[name,</span> <span class="string">alertname]</span></span><br><span class="line"><span class="attr">    match:</span></span><br><span class="line"><span class="attr">      name:</span> <span class="string">instance</span></span><br></pre></td></tr></table></figure><p>这里的<code>group_by: [label,...]</code>将通知分组，<code>group_interval: 30s</code>指的是如果在30s内收到同一组的邮件告警，那么将合并他们为一条邮件然后发送。<code>repeat_interval: 10s</code>当第一次发送邮件后下一次发送邮件的间隔。这个值一定要改，尤其是上线之后。routes主要是将邮件进行区分发送，这里我们之前在rule里面配置的label就可以起作用了。使用match来匹配那些label然后做不同的路由。</p><h3 id="alertmanager-邮件抑制"><a href="#alertmanager-邮件抑制" class="headerlink" title="alertmanager 邮件抑制"></a>alertmanager 邮件抑制</h3><p>邮件抑制的意思，我觉得更应该是邮件优先原则。指的是如果有两组告警，一组告警非常紧急，一组不重要，如果两组一起来告警，那么可能会引起，邮箱里面重要的告警被不重要的淹没了，从而导致我们忽略了某些重要告警。所以我们可以进行配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inhibit_rules:</span></span><br><span class="line"><span class="attr">- source_match:</span></span><br><span class="line"><span class="attr">    severity:</span> <span class="string">'critical'</span></span><br><span class="line"><span class="attr">  target_match:</span></span><br><span class="line"><span class="attr">    severity:</span> <span class="string">'warning'</span></span><br><span class="line">  <span class="comment"># Apply inhibition if the alertname is the same.</span></span><br><span class="line">  <span class="comment"># equal: ['alertname', 'cluster', 'service']</span></span><br><span class="line"><span class="attr">  equal:</span> <span class="string">['monitor','job']</span></span><br></pre></td></tr></table></figure><p>上面的规则就是，如果有serverity为critical的标签，那么serverity为warning的告警先不发，只发critical的告警。在Prometheus的rule里面如下配置：<br><img src="/images/qiniu/2018-04-26-23-54-39.png" alt="2018-04-26-23-54-39"></p><p>所以，多配置点label还是有点用的，哈哈。</p><p>ps：抑制的是某一种高级别的邮件发送，而这个邮件会按照定好的时间间隔一直发送，不会说只发一条就不发了。</p><h3 id="alertmanager-邮件静默"><a href="#alertmanager-邮件静默" class="headerlink" title="alertmanager 邮件静默"></a>alertmanager 邮件静默</h3><p>邮件静默其实就是指在某一段时间内，将某一类型的告警暂时忽略不让它发送告警。（又用到label了。。）创建静默的方式有两种，一个是直接在告警信息上创建；另一个是直接new silence：<br><img src="/images/qiniu/2018-04-26-23-58-20.png" alt="2018-04-26-23-58-20"></p><p>需要配置一个label。之后一定一定要配置时间，第一次使用的时候，我以为静默是一直忽略，然后我就下班了。之后回到家中，2h默认时间过后，我的邮箱爆炸了。。。所以静默是有时间限制的，一定要，一定要设置。<br><img src="/images/qiniu/2018-04-26-23-59-00.png" alt="2018-04-26-23-59-00"></p><h2 id="alertmanager的邮件模板"><a href="#alertmanager的邮件模板" class="headerlink" title="alertmanager的邮件模板"></a>alertmanager的邮件模板</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">templates:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">'./templates/*.tmpl'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">receivers:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">'monitor-admin'</span></span><br><span class="line"><span class="attr">    email_configs:</span></span><br><span class="line"><span class="attr">    - to:</span> <span class="string">'noreply_czj@163.com'</span></span><br><span class="line"><span class="attr">      headers:</span> <span class="string">&#123;</span> <span class="attr">Subject:</span> <span class="string">"[WARN] <span class="template-variable">&#123;&#123; .CommonLabels.alertname&#125;&#125;</span> 报警邮件"</span> <span class="string">&#125;</span></span><br><span class="line"><span class="attr">      html:</span> <span class="string">'<span class="template-variable">&#123;&#123; template "email.czj.html" . &#125;&#125;</span>'</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; define &quot;email.czj.html&quot; &#125;&#125;</span><br><span class="line">&lt;table&gt;</span><br><span class="line">    &lt;tr&gt;&lt;td&gt;报警名&lt;/td&gt;&lt;td&gt;xxx&lt;/td&gt;&lt;td&gt;xx&lt;/td&gt;&lt;td&gt;xxx&lt;/td&gt;&lt;td&gt;xxx&lt;font color=&apos;red&apos;&gt;[xxx]&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;</span><br><span class="line">    &#123;&#123; range $i, $alert := .Alerts &#125;&#125;</span><br><span class="line">        &lt;tr&gt;&lt;td&gt;&#123;&#123; index $alert.Labels &quot;alertname&quot; &#125;&#125;&lt;/td&gt;&lt;td&gt;&#123;&#123; $alert.StartsAt &#125;&#125;&lt;/td&gt;&lt;td&gt;&#123;&#123; $alert.Labels.from &#125;&#125;&lt;/td&gt;&lt;td&gt;&#123;&#123; $alert.Labels.to &#125;&#125;&lt;/td&gt;&lt;td&gt;&#123;&#123; $alert.Labels.value &#125;&#125;&lt;/td&gt;&lt;/tr&gt;</span><br><span class="line">    &#123;&#123; end &#125;&#125;</span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">&lt;/table&gt;</span><br><span class="line"></span><br><span class="line">&#123;&#123; end &#125;&#125;</span><br></pre></td></tr></table></figure><p>邮件模板这里我是在网上找了一个非常详细的帖子。我觉得写的非常详细，主要注意就是要在模板的一行的define，要和receivers的html中tempate相对应。之后就是在模板中引用go语言的变量用<code>点+大写变量名</code>。详细可以看这边博客<a href="https://segmentfault.com/a/1190000008695463" target="_blank" rel="noopener">alertmanager 邮件模板</a>。从源码解释，很详细。</p><!-->Data:.Alerts：[{firing map[instance:10.62.14.80:8080 job:example-random monitor:codelab-monitor to:10.62.12.3 alertname:node_connect from:10.62.14.80 group:production] map[summary:机器 10.62.14.80:8080 ，10.62.14.80，10.62.12.3] 2018-04-19 15:44:51.3912519 +0800 CST 0001-01-01 00:00:00 +0000 UTC http://FTSZ-NB0078:9090/graph?g0.expr=host_to_host_http_connect+%3C%3D+0&g0.tab=1} {firing map[monitor:codelab-monitor to:10.62.14.80 alertname:node_connect from:10.62.14.80 group:production instance:10.62.14.80:8080 job:example-random] map[summary:机器 10.62.14.80:8080 ，10.62.14.80，10.62.14.80] 2018-04-19 15:44:51.3912519 +0800 CST 0001-01-01 00:00:00 +0000 UTC http://FTSZ-NB0078:9090/graph?g0.expr=host_to_host_http_connect+%3C%3D+0&g0.tab=1}]status:.status: firingReceiver:.Receiver: team-X-mailsGroupLabels:.GroupLabels: map[alertname:node_connect]CommonLabels:.CommonLabels: map[from:10.62.14.80 group:production instance:10.62.14.80:8080 job:example-random monitor:codelab-monitor alertname:node_connect]CommonAnnotations:.CommonAnnotations: map[]ExternalURL:.ExternalURL: http://FTSZ-NB0078:9093 <--><h2 id="alertmanager-邮件配置"><a href="#alertmanager-邮件配置" class="headerlink" title="alertmanager 邮件配置"></a>alertmanager 邮件配置</h2><p>注意一个，是否开启ssl。我们用的是http，所以把ssl关闭。我用163配置的：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">global:</span></span><br><span class="line"><span class="attr">  smtp_smarthost:</span> <span class="string">'smtp.163.com:25'</span></span><br><span class="line"><span class="attr">  smtp_from:</span> <span class="string">'********@163.com'</span></span><br><span class="line"><span class="attr">  smtp_auth_username:</span> <span class="string">'*******@163.com'</span></span><br><span class="line"><span class="attr">  smtp_auth_password:</span> <span class="string">'*******'</span></span><br><span class="line"><span class="attr">  smtp_require_tls:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>一般本地测试的时候：<code>smtp_require_tls</code>这个可以是true，但是一般服务器不通外网可能不行。</p><h2 id="prometheus-与-alertmanager-降低日志级别"><a href="#prometheus-与-alertmanager-降低日志级别" class="headerlink" title="prometheus 与 alertmanager 降低日志级别"></a>prometheus 与 alertmanager 降低日志级别</h2><p>日志调到debug级别，两者都可以用<code>.alertmanager --help</code>或者<code>./promtheus --help</code>来查看所有可选项。</p><p>alertmanager:<code>./alertmanager --config.file=&#39;config163.yml&#39; --log.level=debug</code>;</p><p>prometheus: <code>./prometheus --web.enable-lifecycle --config.file=&#39;prometheus.yml&#39; --log.level=debug --web.external-url=http://localhost:9090/pro --web.route-prefix=pro</code></p><p>后面Prometheus的<code>--web.external-url=http://localhost:9090/pro</code>，<code>--web.route-prefix=pro</code>。这两个参数就类似加个服务号，如果有子路径做反向代理，Prometheus最好启动的时候就加上这两个。</p><p>比如在nginx用子路径做反向代理：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen       127.0.0.1:80;</span><br><span class="line">    #server_name  localhost;</span><br><span class="line"></span><br><span class="line">    #charset koi8-r;</span><br><span class="line"></span><br><span class="line">    #access_log  logs/host.access.log  main;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        root   html;</span><br><span class="line">        index  index.html index.htm;   </span><br><span class="line">    #    proxy_pass http://127.0.0.1:9090/;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location /alertmanager/ &#123;</span><br><span class="line">        proxy_pass http://127.0.0.1:9093/;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location /pro/ &#123;</span><br><span class="line">        proxy_pass http://127.0.0.1:9090/pro/;</span><br><span class="line">    &#125;</span><br><span class="line">    #error_page  404              /404.html;</span><br><span class="line"></span><br><span class="line">    # redirect server error pages to the static page /50x.html</span><br><span class="line">    #</span><br><span class="line">    error_page   500 502 503 504  /50x.html;</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">        root   html;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>暂时就这些吧。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://prometheus.io/docs/prometheus/latest/getting_started/" target="_blank" rel="noopener">GETTING STARTED prometheus.io</a><br><a href="https://segmentfault.com/a/1190000008695463" target="_blank" rel="noopener">alertmanager邮件模版</a><br><a href="https://www.kancloud.cn/huyipow/prometheus/527563" target="_blank" rel="noopener">alertmanager报警规则详解</a><br><a href="http://blog.51cto.com/xujpxm/2055970" target="_blank" rel="noopener">Prometheus智能化报警流程避免邮件轰炸</a><br><a href="https://prometheus.io/blog/2016/03/03/custom-alertmanager-templates/" target="_blank" rel="noopener">Custom Alertmanager Templates</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Prometheus-Grafana-搭建监控系统&quot;&gt;&lt;a href=&quot;#Prometheus-Grafana-搭建监控系统&quot; class=&quot;headerlink&quot; title=&quot;Prometheus+Grafana 搭建监控系统&quot;&gt;&lt;/a&gt;Prometheus+Grafana 搭建监控系统&lt;/h1&gt;&lt;p&gt;今天将第一版监控系统上线，过程整个就是一路坎坷。不过踩坑，填坑，确实也是为自己积攒了一些小经验。&lt;/p&gt;
&lt;h2 id=&quot;prometheus的服务发现&quot;&gt;&lt;a href=&quot;#prometheus的服务发现&quot; class=&quot;headerlink&quot; title=&quot;prometheus的服务发现&quot;&gt;&lt;/a&gt;prometheus的服务发现&lt;/h2&gt;&lt;p&gt;Prometheus的监控使用的是pull的模式，也就是每隔几秒钟去各个target采集一次metric。那么如果是多个target，如果是静态配置的话，那么就得在配置文件里面一个一个添加，尽管可以使用接口去更新配置文件，但如果服务太多，那工作量也很大。而且如果遇到微服务的情况并且容器化部署，那么可能ip地址都是随机改变的，那么就将更麻烦了。所以就有服务发现的模式出来了，有很多种实现的方式，consul，dns等等，针对我们现有的平台，我们选择了file_sd_config:&lt;/p&gt;
&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;scrape_configs:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# The job name is added as a label `job=&amp;lt;job_name&amp;gt;` to any timeseries scraped from this config.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  - job_name:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;prometheus&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# metrics_path defaults to &#39;/metrics&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# scheme defaults to &#39;http&#39;.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    static_configs:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      - targets:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;[&#39;localhost:9090&#39;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  - job_name:&lt;/span&gt;       &lt;span class=&quot;string&quot;&gt;&#39;rancher_network_monitor&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# Override the global default and scrape targets from this job every 5 seconds.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    scrape_interval:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;m&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    static_configs:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      - targets:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;[&#39;192.168.7.3:8080&#39;,&#39;192.168.8.90:8080&#39;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;        labels:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;          group:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;rancher_network_monitor&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    metrics_path:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;/metrics&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  - job_name:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;filediscovery&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    scrape_interval:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;s&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    file_sd_configs:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      - files:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;[&#39;/home/config/*.json&#39;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;基于文件的方式，只需要在&lt;code&gt;/home/config&lt;/code&gt;目录下增加json文件就可以了，这也是在网上找的一个方案，所以我也记录下来，万一也能帮助到别人了&lt;/p&gt;
    
    </summary>
    
      <category term="监控" scheme="http://chenzhijun.me/categories/%E7%9B%91%E6%8E%A7/"/>
    
    
      <category term="prometheus" scheme="http://chenzhijun.me/tags/prometheus/"/>
    
  </entry>
  
  <entry>
    <title>Rancher 体验</title>
    <link href="http://chenzhijun.me/2018/04/18/rancher-experience/"/>
    <id>http://chenzhijun.me/2018/04/18/rancher-experience/</id>
    <published>2018-04-18T14:34:13.000Z</published>
    <updated>2018-10-10T07:16:15.570Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Rancher-体验"><a href="#Rancher-体验" class="headerlink" title="Rancher 体验"></a>Rancher 体验</h1><p>Rancher是一个开源的企业级容器管理平台。花了大概3个小时从零到自己搭建一个能运行的服务，真的容易啊。而且文档很丰富，官方还有中文版。哈~，地址：<a href="https://rancher.com/docs/rancher/v1.6/zh/" target="_blank" rel="noopener">文档</a>。</p><h2 id="安装-Rancher"><a href="#安装-Rancher" class="headerlink" title="安装 Rancher"></a>安装 Rancher</h2><p>安装Rancher其实很简单，因为它本身就提供了image，所以只需要在本地安装docker，然后下载镜像，之后再启动就完事了。整个过程非常顺利。唯一一个需要主要的地方是，它需要两台机器。一个作为rancher主节点，一个作为工作节点。所以，如果想体验一下 Rancher 的能力，最好能有两台ip不一样的机器，并且两台都安装了docker，当然也可以用虚拟机。</p><p><code>docker run -d --name rancher -p 8080:8080 --restart=unless-stopped rancher/server:stable</code></p><p>安装完 Rancher 之后，需要配置一下主机。Rancher 做了非常棒的国际化，支持中文。��[笑哭.png]</p><a id="more"></a><p><img src="/images/qiniu/2018-04-18-22-49-38.png" alt="2018-04-18-22-49-38"> 主机的注册地址，一般是rancher主节点的ip地址。</p><p>之后选择基础架构-&gt;添加主机。</p><p><img src="/images/qiniu/2018-04-18-22-53-45.png" alt="2018-04-18-22-53-45"></p><p>只需要将脚本进行拷贝，在运行的另一台安装了docker的主机上执行它，之后就能在主机中看到了：</p><p><img src="/images/qiniu/2018-04-18-22-55-12.png" alt="2018-04-18-22-55-12"></p><h2 id="应用安装与运行"><a href="#应用安装与运行" class="headerlink" title="应用安装与运行"></a>应用安装与运行</h2><p>应用分为<code>用户应用</code>和<code>基础设施应用</code>。用户应用：</p><p><img src="/images/qiniu/2018-04-18-22-55-50.png" alt="2018-04-18-22-55-50"></p><p>基础设施应用：</p><p><img src="/images/qiniu/2018-04-18-22-58-49.png" alt="2018-04-18-22-58-49"></p><p>添加应用：</p><p><img src="/images/qiniu/2018-04-18-22-59-59.png" alt="2018-04-18-22-59-59"></p><p>应用是一个服务集，应用下可以有很多服务。一个应用下的网段是在一块的，不同应用之间的网络是不能直接连接的。</p><p>添加完应用之后就是添加服务：</p><p><img src="/images/qiniu/2018-04-18-23-04-08.png" alt="2018-04-18-23-04-08"></p><p>添加完服务之后添加负载均衡：</p><p><img src="/images/qiniu/2018-04-18-23-04-54.png" alt="2018-04-18-23-04-54"></p><p>一个发布在rancher中的应用就可以体验了。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://rancher.com/docs/rancher/v1.6/zh/" target="_blank" rel="noopener">Rancher 文档</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Rancher-体验&quot;&gt;&lt;a href=&quot;#Rancher-体验&quot; class=&quot;headerlink&quot; title=&quot;Rancher 体验&quot;&gt;&lt;/a&gt;Rancher 体验&lt;/h1&gt;&lt;p&gt;Rancher是一个开源的企业级容器管理平台。花了大概3个小时从零到自己搭建一个能运行的服务，真的容易啊。而且文档很丰富，官方还有中文版。哈~，地址：&lt;a href=&quot;https://rancher.com/docs/rancher/v1.6/zh/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;文档&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;安装-Rancher&quot;&gt;&lt;a href=&quot;#安装-Rancher&quot; class=&quot;headerlink&quot; title=&quot;安装 Rancher&quot;&gt;&lt;/a&gt;安装 Rancher&lt;/h2&gt;&lt;p&gt;安装Rancher其实很简单，因为它本身就提供了image，所以只需要在本地安装docker，然后下载镜像，之后再启动就完事了。整个过程非常顺利。唯一一个需要主要的地方是，它需要两台机器。一个作为rancher主节点，一个作为工作节点。所以，如果想体验一下 Rancher 的能力，最好能有两台ip不一样的机器，并且两台都安装了docker，当然也可以用虚拟机。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker run -d --name rancher -p 8080:8080 --restart=unless-stopped rancher/server:stable&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;安装完 Rancher 之后，需要配置一下主机。Rancher 做了非常棒的国际化，支持中文。��[笑哭.png]&lt;/p&gt;
    
    </summary>
    
      <category term="Docker" scheme="http://chenzhijun.me/categories/Docker/"/>
    
    
      <category term="Docker" scheme="http://chenzhijun.me/tags/Docker/"/>
    
      <category term="Rancher" scheme="http://chenzhijun.me/tags/Rancher/"/>
    
  </entry>
  
  <entry>
    <title>prometheus 初体验</title>
    <link href="http://chenzhijun.me/2018/04/16/prometheus-pre-use/"/>
    <id>http://chenzhijun.me/2018/04/16/prometheus-pre-use/</id>
    <published>2018-04-16T05:55:50.000Z</published>
    <updated>2018-10-10T07:16:15.570Z</updated>
    
    <content type="html"><![CDATA[<h1 id="prometheus-监控"><a href="#prometheus-监控" class="headerlink" title="prometheus 监控"></a>prometheus 监控</h1><p>普罗米修斯主要的是从被监控项目中获取metrics。架构全景图：</p><p><img src="/images/qiniu/2018-04-16-14-32-33.png" alt="2018-04-16-14-32-33"></p><h2 id="安装与使用"><a href="#安装与使用" class="headerlink" title="安装与使用"></a>安装与使用</h2><p>Prometheus 的安装方式很多，我在本地是使用windows的包，Prometheus自打出生就支持docker所以，如果是*inx机器，建议安装docker然后体验。在本地我仅仅只需要执行目录下的<code>prometheus.exe</code>就可以就可以进行体验了。Prometheus服务自身也会暴露出metrics，用来对自身进行指标收集和监控。在根目录最重要的一个配置文件是<code>prometheus.yml</code>，里面有三类大属性：global，rule_files，scrape_configs。具体的配置信息可以看这个：<br><a href="https://prometheus.io/docs/prometheus/latest/configuration/configuration/" target="_blank" rel="noopener">https://prometheus.io/docs/prometheus/latest/configuration/configuration/</a>，也可以看看中文文档：<a href="https://songjiayang.gitbooks.io/prometheus/configuration/" target="_blank" rel="noopener">https://songjiayang.gitbooks.io/prometheus/configuration/</a></p><a id="more"></a><p>在Prometheus的后台<code>localhost:9090</code>，选择一个metric，然后点击execute，之后就可以在下面的graph和console中看到输出的结果：</p><p><img src="/images/qiniu/2018-04-18-22-18-09.png" alt="2018-04-18-22-18-09"></p><p>在<code>status</code>下选择<code>Configuration</code>然后可以看到<code>prometheus.yml</code>里面的定义。在<code>Target</code>下可以看到监控的目标源的ip地址的信息。</p><h2 id="metrics-类型"><a href="#metrics-类型" class="headerlink" title="metrics 类型"></a>metrics 类型</h2><p>metrics 有四类，并且每一个类都有相应的客户端lib。在目标监控中需要暴露出相应的metrics给prometheus服务器进行收集，之后才能进行有效的信息分析，之后预警和监控。</p><p>Prometheus客户端lib提供4种主要的核心metric类型：Counter，Gauge，Histogram，Summary。</p><p><code>Counter</code>：数值类型，只能增加，不能减少。用户计数请求服务，完成任务数，发生错误数。不要用在可能会减少的地方</p><p><code>Gauge</code>：数值类型可以增加可以减少，变化的类型，类似于测量温度，当前内存使用量</p><p><code>Histogram</code>：直方图对样本进行观察（比如请求的持续时间，响应大小）。并将其统计到一个可配置的bucket中。一个Histogram包括：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;basename&gt;_bucket&#123;le="&lt;upper</span> <span class="string">inclusive</span> <span class="string">bound&gt;"&#125;</span></span><br><span class="line"><span class="string">&lt;basename&gt;_sum</span></span><br><span class="line"><span class="string">&lt;basename&gt;_count：指的是相同的&lt;basename&gt;_bucket&#123;le="+Inf"&#125;</span></span><br></pre></td></tr></table></figure><p><code>Summary</code>：主要用于表示一段时间内数据采样结果，类似Histogram</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;basename&gt;&#123;quantile="&lt;φ&gt;"&#125;</span>   <span class="string">（0</span> <span class="string">≤</span> <span class="string">φ</span> <span class="string">≤</span> <span class="number">1</span><span class="string">）</span></span><br><span class="line"><span class="string">&lt;basename&gt;_sum</span></span><br><span class="line"><span class="string">&lt;basename&gt;_count</span></span><br></pre></td></tr></table></figure><p>metrics定义如：<code>&lt;metric name&gt;{&lt;label name&gt;=&lt;label value&gt;, ...}</code></p><p>metrics接口需要注意，每行要空行，最后以空行结束。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"># HELP http_requests_total The total number of HTTP requests.</span><br><span class="line"># TYPE http_requests_total counter</span><br><span class="line">http_requests_total&#123;method=&quot;post&quot;,code=&quot;200&quot;&#125; 1027 1395066363000</span><br><span class="line">http_requests_total&#123;method=&quot;post&quot;,code=&quot;400&quot;&#125; 3 1395066363000</span><br><span class="line"></span><br><span class="line"># Escaping in label values:</span><br><span class="line">msdos_file_access_time_seconds&#123;path=&quot;C:\\DIR\\FILE.TXT&quot;,error=&quot;Cannot find file:\n\&quot;FILE.TXT\&quot;&quot;&#125; 1.458255915e9</span><br><span class="line"></span><br><span class="line"># Minimalistic line:</span><br><span class="line">metric_without_timestamp_and_labels 12.47</span><br><span class="line"></span><br><span class="line"># A weird metric from before the epoch:</span><br><span class="line">something_weird&#123;problem=&quot;division by zero&quot;&#125; +Inf -3982045</span><br><span class="line"></span><br><span class="line"># A histogram, which has a pretty complex representation in the text format:</span><br><span class="line"># HELP http_request_duration_seconds A histogram of the request duration.</span><br><span class="line"># TYPE http_request_duration_seconds histogram</span><br><span class="line">http_request_duration_seconds_bucket&#123;le=&quot;0.05&quot;&#125; 24054</span><br><span class="line">http_request_duration_seconds_bucket&#123;le=&quot;0.1&quot;&#125; 33444</span><br><span class="line">http_request_duration_seconds_bucket&#123;le=&quot;0.2&quot;&#125; 100392</span><br><span class="line">http_request_duration_seconds_bucket&#123;le=&quot;0.5&quot;&#125; 129389</span><br><span class="line">http_request_duration_seconds_bucket&#123;le=&quot;1&quot;&#125; 133988</span><br><span class="line">http_request_duration_seconds_bucket&#123;le=&quot;+Inf&quot;&#125; 144320</span><br><span class="line">http_request_duration_seconds_sum 53423</span><br><span class="line">http_request_duration_seconds_count 144320</span><br><span class="line"></span><br><span class="line"># Finally a summary, which has a complex representation, too:</span><br><span class="line"># HELP rpc_duration_seconds A summary of the RPC duration in seconds.</span><br><span class="line"># TYPE rpc_duration_seconds summary</span><br><span class="line">rpc_duration_seconds&#123;quantile=&quot;0.01&quot;&#125; 3102</span><br><span class="line">rpc_duration_seconds&#123;quantile=&quot;0.05&quot;&#125; 3272</span><br><span class="line">rpc_duration_seconds&#123;quantile=&quot;0.5&quot;&#125; 4773</span><br><span class="line">rpc_duration_seconds&#123;quantile=&quot;0.9&quot;&#125; 9001</span><br><span class="line">rpc_duration_seconds&#123;quantile=&quot;0.99&quot;&#125; 76656</span><br><span class="line">rpc_duration_seconds_sum 1.7560473e+07</span><br><span class="line">rpc_duration_seconds_count 2693</span><br></pre></td></tr></table></figure><h2 id="Exporter"><a href="#Exporter" class="headerlink" title="Exporter"></a>Exporter</h2><p>自定义Exporter其实就是暴露一个metrics接口让Prometheus服务器进行收集。所以只需要返回像上面的例子一样的文本数据就可以了。<br>官方推荐首先采用<code>Historam</code>。可以导入相应的客户端metric然后进行导入。</p><h2 id="继续学习"><a href="#继续学习" class="headerlink" title="继续学习"></a>继续学习</h2><ol><li>Prometheus 的内置函数</li><li>Prometheus 自定发现监控目标</li><li>报警规则，报警方式</li><li>图表</li><li>对接granafa</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;prometheus-监控&quot;&gt;&lt;a href=&quot;#prometheus-监控&quot; class=&quot;headerlink&quot; title=&quot;prometheus 监控&quot;&gt;&lt;/a&gt;prometheus 监控&lt;/h1&gt;&lt;p&gt;普罗米修斯主要的是从被监控项目中获取metrics。架构全景图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/qiniu/2018-04-16-14-32-33.png&quot; alt=&quot;2018-04-16-14-32-33&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;安装与使用&quot;&gt;&lt;a href=&quot;#安装与使用&quot; class=&quot;headerlink&quot; title=&quot;安装与使用&quot;&gt;&lt;/a&gt;安装与使用&lt;/h2&gt;&lt;p&gt;Prometheus 的安装方式很多，我在本地是使用windows的包，Prometheus自打出生就支持docker所以，如果是*inx机器，建议安装docker然后体验。在本地我仅仅只需要执行目录下的&lt;code&gt;prometheus.exe&lt;/code&gt;就可以就可以进行体验了。Prometheus服务自身也会暴露出metrics，用来对自身进行指标收集和监控。在根目录最重要的一个配置文件是&lt;code&gt;prometheus.yml&lt;/code&gt;，里面有三类大属性：global，rule_files，scrape_configs。具体的配置信息可以看这个：&lt;br&gt;&lt;a href=&quot;https://prometheus.io/docs/prometheus/latest/configuration/configuration/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://prometheus.io/docs/prometheus/latest/configuration/configuration/&lt;/a&gt;，也可以看看中文文档：&lt;a href=&quot;https://songjiayang.gitbooks.io/prometheus/configuration/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://songjiayang.gitbooks.io/prometheus/configuration/&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="监控" scheme="http://chenzhijun.me/categories/%E7%9B%91%E6%8E%A7/"/>
    
    
      <category term="prometheus" scheme="http://chenzhijun.me/tags/prometheus/"/>
    
  </entry>
  
</feed>
